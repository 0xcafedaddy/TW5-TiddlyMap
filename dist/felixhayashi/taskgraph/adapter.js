/*\

title: $:/plugins/felixhayashi/taskgraph/adapter.js
type: application/javascript
module-type: library

@preserve

\*/
var utils=require("$:/plugins/felixhayashi/taskgraph/utils.js").utils;var ViewAbstraction=require("$:/plugins/felixhayashi/taskgraph/view_abstraction.js").ViewAbstraction;var vis=require("$:/plugins/felixhayashi/vis/vis.js");var Adapter=function(t){this.wiki=t?t:$tw.wiki;this.opt=$tw.taskgraph.opt;this.logger=$tw.taskgraph.logger};Adapter.prototype.insertEdge=function(t,e){if(typeof t!=="object"||!t.from||!t.to)return;e=new ViewAbstraction(e);var i=t.label?t.label:this.opt.misc.unknownEdgeLabel;var r=e.getEdgeStoreLocation()+"/"+i;var s=this.wiki.getTiddlerData(r,[]);this.logger("info",'Inserting edge into store  "'+r+'"',t);delete t.label;if(t.id){var o=utils.keyOfItemWithProperty(s,"id",t.id);if(typeof o==="undefined"){o=s.length}}else{t.id=utils.genUUID();var o=s.length}s[o]=t;var a={};var n=this.wiki.getTiddler(r);if(!n||!n.fields.id){a.id=utils.genUUID()}this.wiki.setTiddlerData(r,s,a);t.label=i;$tw.taskgraph.edgeChanges.push({type:"insert",edge:t})};Adapter.prototype.selectEdgesByFilter=function(t,e){var i=utils.getMatches(t);var r=[];for(var s=0;s<i.length;s++){r.push(utils.getBasename(i[s]))}return this.selectEdgesByLabel(r,e)};Adapter.prototype.selectEdgesByLabel=function(t,e){if(typeof e!=="object")e=utils.getEmptyMap();var i=new ViewAbstraction(e.view);var r=i.getEdgeStoreLocation();var s=utils.getEmptyMap();for(var o=0;o<t.length;o++){var a=r+"/"+t[o];if(!utils.tiddlerExists(a))continue;var n=this.wiki.getTiddlerData(a);for(var d=0;d<n.length;d++){if(t[o]!==this.opt.misc.unknownEdgeLabel){n[d].label=t[o]}s[n[d].id]=n[d]}}return utils.convert(s,e.outputType)};Adapter.prototype.selectEdgesByEndpoints=function(t,e){if(typeof e!=="object")e=utils.getEmptyMap();var i=new ViewAbstraction(e.view);var r=i.exists()?e.view.getEdgeFilter("compiled"):this.opt.filter.allSharedEdges;var s=this.selectEdgesByFilter(r,{outputType:"array",view:i});return this.filterEdgesByEndpoints(s,t,e)};Adapter.prototype.filterEdgesByEndpoints=function(t,e,i){if(typeof i!=="object")i=utils.getEmptyMap();t=utils.convert(t,"array");var r=/^(=1|>=1|=2)$/;var s=r.test(i.endpointsInSet)?i.endpointsInSet:">=1";var e=utils.getLookupTable(e,"id");var o=utils.getEmptyMap();for(var a=0;a<t.length;a++){var n=t[a];switch(s){case"=2":isMatch=e[n.from];break;case">=1":isMatch=e[n.from]||e[n.to];break;case"=1":isMatch=e[n.from]===undefined&&e[n.to]||e[n.to]===undefined&&e[n.from];break;default:isMatch=false}if(isMatch)o[n.id]=n}return utils.convert(o,i.outputType)};Adapter.prototype.selectNodesByFilter=function(t,e){var i=utils.getMatches(t);return this.selectNodesByReference(i,e)};Adapter.prototype.selectNodesByReference=function(t,e){if(typeof e!=="object")e=utils.getEmptyMap();var i=e.addProperties;var r=utils.getEmptyMap();for(var s=0;s<t.length;s++){if(this.wiki.isSystemTiddler(t[s])){continue}var o=this.setupTiddler(t[s]);if(!o)continue;var a=o.fields[this.opt.field.nodeId];if(r[a]){continue}var n=utils.getEmptyMap();if(typeof i==="object"){n=$tw.utils.extendDeepCopy(n,i)}n.id=a;n.label=o.fields.title;r[a]=n}if(e.view){this._restorePositions(r,e.view)}return utils.convert(r,e.outputType)};Adapter.prototype.selectNeighbours=function(t,e){if(typeof e!=="object")e=utils.getEmptyMap();if(e.edges){var i=this.filterEdgesByEndpoints(e.edges,t,{outputType:"array",endpointsInSet:"=1"})}else{var i=this.selectEdgesByEndpoints(t,{outputType:"array",view:e.view,endpointsInSet:"=1"})}var t=utils.getLookupTable(t,"id");var r=utils.getEmptyMap();for(var s=0;s<i.length;s++){var o=t[i[s].from]?i[s].to:i[s].from;r[o]=true}return this.selectNodesByIds(r,e)};Adapter.prototype.selectNodesByIds=function(t,e){if(typeof e!=="object")e=utils.getEmptyMap();if(Array.isArray(t)){t=utils.getArrayValuesAsHashmapKeys(t)}else if(t instanceof vis.DataSet){t=utils.getLookupTable(t,"id")}var i=utils.getEmptyMap();var r=this.wiki.allTitles();var s=this.opt.field.nodeId;var o=e.addProperties;for(var a in t){for(var n=0;n<r.length;n++){var d=this.wiki.getTiddler(r[n]);var a=d.fields[s];if(d.isDraft()||this.wiki.isSystemTiddler(r[n])){continue}if(t[a]){var l=utils.getEmptyMap();if(typeof o==="object"){l=$tw.utils.extendDeepCopy(l,o)}l.id=a;l.label=d.fields.title;i[a]=l}}}if(e.view){this._restorePositions(i,e.view)}return utils.convert(i,e.outputType)};Adapter.prototype.selectNodeById=function(t,e){if(typeof e!=="object"){e=utils.getEmptyMap()}e.outputType="hashmap";var i=this.selectNodesByIds([t],e);return i[t]};Adapter.prototype.deleteNodesFromStore=function(t){if(!t)return;var e=this.opt.field.nodeId;var i=this.wiki.allTitles();var r=[];var t=utils.getLookupTable(t,"id");for(var s in t){for(var o=0;o<i.length;o++){var a=utils.getTiddlersWithProperty(e,s,{isIncludeDrafts:true,isReturnRef:true,tiddlers:i});r=r.concat(a)}}var n=this.wiki.getTiddlerList("$:/StoryList");if(n.length){n=n.filter(function(t){return r.indexOf(t)==-1});var d=this.wiki.getTiddler("$:/StoryList");this.wiki.addTiddler(new $tw.Tiddler(d,{list:n}))}utils.deleteTiddlers(r)};Adapter.prototype.deleteEdgeFromStore=function(t,e){if(!t)return;var i=t.label?t.label:this.opt.misc.unknownEdgeLabel;var e=new ViewAbstraction(e);var r=e.getEdgeStoreLocation()+"/"+i;var s=this.wiki.getTiddlerData(r,[]);this.logger("info",'Edge with label "'+i+'" will be deleted: '+t);var o=utils.keyOfItemWithProperty(s,"id",t.id);if(o!=null){s.splice(o,1);this.wiki.setTiddlerData(r,s);$tw.taskgraph.edgeChanges.push({type:"delete",edge:t})}};Adapter.prototype.deleteEdgesFromStore=function(t,e){t=utils.convert(t,"array");for(var i=0;i<t.length;i++){this.deleteEdgeFromStore(t[i],e)}};Adapter.prototype.getView=function(t,e){return new ViewAbstraction(t,e)};Adapter.prototype.createView=function(t){if(typeof t!=="string"||t===""){t="My view"}var e=this.wiki.generateNewTitle(this.opt.path.views+"/"+t);return new ViewAbstraction(e,true)};Adapter.prototype._restorePositions=function(t,e){e=new ViewAbstraction(e);if(!e.exists())return;var i=e.getPositions();for(var r in t){if(utils.hasOwnProp(i,r)){t[r].x=i[r].x;t[r].y=i[r].y}}};Adapter.prototype.storePositions=function(t,e){e=new ViewAbstraction(e);e.setPositions(t)};Adapter.prototype.setupTiddler=function(t){var e=this.wiki.getTiddler(utils.getTiddlerReference(t));if(!e)return;var i=this.opt.field.nodeId;if(!e.fields[i]){var r=utils.getEmptyMap();r[i]=utils.genUUID();e=new $tw.Tiddler(e,r);$tw.wiki.addTiddler(e)}return e};Adapter.prototype.insertNode=function(t,e){if(typeof e!=="object")e=utils.getEmptyMap();if(typeof t!=="object"){t=utils.getEmptyMap()}if(typeof t.label!=="string"){t.label="New node"}if(!t.id){t.id=utils.genUUID()}var i=utils.getEmptyMap();i.title=this.wiki.generateNewTitle(t.label);i[this.opt.field.nodeId]=t.id;if(e.view){var r=new ViewAbstraction(e.view);r.setNodePosition(t);var s="[field:"+this.opt.field.nodeId+"["+t.id+"]]";r.appendToNodeFilter(s)}this.wiki.addTiddler(new $tw.Tiddler(i));return t};exports.Adapter=Adapter;