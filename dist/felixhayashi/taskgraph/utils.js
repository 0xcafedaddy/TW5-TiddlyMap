/*\

title: $:/plugins/felixhayashi/taskgraph/utils.js
type: application/javascript
module-type: library

ATTENTION: THIS CLASS MUST NOT REQUIRE ANY OTHER TASKGRAPH FILE
IN ORDER TO AVOID ACYCLIC DEPENDENCIES!

@preserve

\*/
var vis=require("$:/plugins/felixhayashi/vis/vis.js"),utils={};utils.deleteTiddlers=function(t){for(var e=Object.keys(t),i=0;i<e.length;i++)if(utils.tiddlerExists(t[e[i]])){var r=utils.getTiddlerReference(t[e[i]]);$tw.wiki.deleteTiddler(r)}},utils.getTiddlerIds=function(t,e){for(var i=[],r=Object.keys(t),s=0;s<r.length;s++)if(utils.tiddlerExists(t[r[s]])){var n=utils.getTiddler(t[r[s]]).fields[e];i.push(n)}return i},utils.getExistenceMap=function(t){t instanceof vis.DataSet?t=t.getIds():Array.isArray(t)||(t=Object.keys(t));for(var e=utils.getEmptyMap(),i=0;i<t.length;i++)e[t[i]]=!0;return e},utils.convert=function(t,e){if("object"==typeof t)switch(e){case"array":return utils.getValues(t);case"hashmap":case"object":return t instanceof vis.DataSet?vis.get({returnType:"Object"}):t;case"dataset":default:return t instanceof vis.DataSet?t:(Array.isArray(t)||(t=utils.getValues(t)),new vis.DataSet(t))}},utils.inject=function(t,e){if(e instanceof vis.DataSet)e.update(utils.convert(t,"array"));else if(Array.isArray(e)){t=utils.convert(t,"object");for(var i in t)-1==e.indexOf(t[i])&&e.push(t[i])}else $tw.utils.extend(e,utils.convert(t,"object"));return e},utils.getValues=function(t){if(Array.isArray(t))return t;if(t instanceof vis.DataSet)return t.get({returnType:"Array"});for(var e=[],i=Object.keys(t),r=0;r<i.length;r++)e.push(t[i[r]]);return e},utils.hasOwnProp=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},utils.getEmptyMap=function(){var t=Object.create(null);return Object.defineProperty(t,"hasOwnProperty",{enumerable:!1,configurable:!1,writable:!1,value:Object.prototype.hasOwnProperty.bind(t)}),t},utils.getMatches=function(t,e){var i=void 0;if("object"==typeof e){var r=Object.keys(e);i=function(t){for(var i=0;i<r.length;i++){var s=utils.getTiddler(e[r[i]]);s&&t(s,s.fields.title)}}}"string"==typeof t&&(t=$tw.wiki.compileFilter(t));var s=t.call($tw.wiki,i);return s},utils.isMatch=function(t,e){var i=getTiddlerReference(t);return utils.getMatches(e,[i]).length>0},utils.getTiddlerReference=function(t){return t instanceof $tw.Tiddler?t.fields.title:"string"==typeof t?t:void 0},utils.getTiddler=function(t){return t instanceof $tw.Tiddler?t:$tw.wiki.getTiddler(t)},utils.getBasename=function(t){return t.substring(t.lastIndexOf("/")+1)},utils.notify=function(t){var e="$:/temp/taskgraph/notify";$tw.wiki.addTiddler(new $tw.Tiddler({title:e,text:t})),$tw.notifier.display(e)},utils.tiddlerExists=function(t){var e=utils.getTiddlerReference(t);return e&&($tw.wiki.tiddlerExists(e)||$tw.wiki.isShadowTiddler(e))},utils.getPropertiesByPrefix=function(t,e,i){var r=utils.getEmptyMap();for(var s in t)utils.startsWith(s,e)&&(r[i?s.substr(e.length):s]=t[s]);return r},utils.getDomNodePos=function(t){for(var e={x:0,y:0};;){if(e.x+=t.offsetLeft,e.y+=t.offsetTop,null===t.offsetParent)break;t=t.offsetParent}return e},utils.startsWith=function(t,e){return"string"==typeof t&&0===t.indexOf(e)},utils.hasElements=function(t){return Object.keys(t).length>0},utils.isDraft=function(){return utils.getTiddler(tRef)&&utils.getTiddler(tRef).isDraft()},utils.getText=function(t,e){e||(e="");var i=utils.getTiddler(t);return i?i.fields.text:e},utils.keysOfItemsWithProperty=function(t,e,i,r){t=utils.getIterableCollection(t);for(var s=Object.keys(t),n=[],r="number"==typeof r?r:s.length,l=0;l<s.length;l++){var u=s[l];if("object"==typeof t[u]&&t[u][e]&&(!i||t[u][e]===i)&&(n.push(u),n.length===r))break}return n},utils.keyOfItemWithProperty=function(t,e,i){var r=utils.keysOfItemsWithProperty(t,e,i,1);return r.length?r[0]:void 0},utils.getIterableCollection=function(t){return t instanceof vis.DataSet?t.get():t},utils.getLookupTable=function(t,e){t=utils.getIterableCollection(t);for(var i=utils.getEmptyMap(),r=Object.keys(t),s=0;s<r.length;s++){var n=r[s],l=e?t[n][e]:t[n];if(("string"!=typeof l||""==l)&&"number"!=typeof l||i[l])throw'Taskgraph: Cannot use "'+l+'" as lookup table index';i[l]=t[n]}return i},utils.getArrayValuesAsHashmapKeys=function(t){return utils.getLookupTable(t)},utils.getTiddlersWithProperty=function(t,e,i){"object"!=typeof i&&(i=utils.getEmptyMap()),i.tiddlers||(i.tiddlers=$tw.wiki.allTitles());for(var r=[],s=i.isReturnRef,n=Object.keys(i.tiddlers),l=0;l<n.length;l++){var u=utils.getTiddler(i.tiddlers[n[l]]);if(u.fields[t]===e&&(r.push(s?u.fields.title:u),i.isIncludeDrafts)){var a=$tw.wiki.findDraft(u.fields.title);a&&r.push(s?a:$tw.wiki.getTiddler(a))}}return r},utils.genUUID=function(){var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");return function(){for(var e,i=t,r=new Array(36),s=0,n=0;36>n;n++)8==n||13==n||18==n||23==n?r[n]="-":14==n?r[n]="4":(2>=s&&(s=33554432+16777216*Math.random()|0),e=15&s,s>>=4,r[n]=i[19==n?3&e|8:e]);return r.join("")}}(),exports.utils=utils;