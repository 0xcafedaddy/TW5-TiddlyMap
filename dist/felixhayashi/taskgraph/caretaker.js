/*\

title: $:/plugins/felixhayashi/taskgraph/caretaker.js
type: application/javascript
module-type: startup

This module is responsible for registering a global namespace under $tw
and loading (and refreshing) the configuration.

Since changes in configuration tiddlers are instantly acknowledged,
the user does not need to refresh its browser (in theory :)).

Like a caretaker in real life, nobody can communicate with him. He does
all his work in the background without being ever seen. What I want to
say here is: do not require the caretaker!

@preserve

\*/
(function(){"use strict";exports.name="taskgraph-setup";exports.platforms=["browser"];exports.after=["startup"];exports.before=["rootwidget"];exports.synchronous=true;var a=require("$:/plugins/felixhayashi/taskgraph/utils.js").utils;var e=require("$:/plugins/felixhayashi/taskgraph/adapter.js").Adapter;var t=function(e){var t=e;if(!t.path)t.path=a.getEmptyMap();t.path.pluginRoot="$:/plugins/felixhayashi/taskgraph";t.path.edges="$:/plugins/felixhayashi/taskgraph/graph/edges";t.path.views="$:/plugins/felixhayashi/taskgraph/graph/views";t.path.options="$:/plugins/felixhayashi/taskgraph/options";t.path.tempRoot="$:/temp/felixhayashi/taskgraph";t.path.localHolders="$:/temp/felixhayashi/taskgraph/holders";t.path.dialogs="$:/temp/felixhayashi/taskgraph/dialog";if(!t.ref)t.ref=a.getEmptyMap();t.ref.dialogStandardFooter="$:/plugins/felixhayashi/taskgraph/dialog/standardFooter";t.ref.visOptions="$:/plugins/felixhayashi/taskgraph/options/vis";t.ref.tgOptions="$:/plugins/felixhayashi/taskgraph/options/taskgraph";t.ref.edgeTypeDialog="$:/plugins/felixhayashi/taskgraph/dialog/getEdgeType";t.ref.viewNameDialog="$:/plugins/felixhayashi/taskgraph/dialog/getViewName";t.ref.confirmationDialog="$:/plugins/felixhayashi/taskgraph/dialog/getConfirmation";t.ref.nodeNameDialog="$:/plugins/felixhayashi/taskgraph/dialog/getNodeName";t.ref.editNodeFilter="$:/plugins/felixhayashi/taskgraph/dialog/editNodeFilter";t.ref.cannotDeleteViewDialog="$:/plugins/felixhayashi/taskgraph/dialog/cannotDeleteViewDialog";t.ref.defaultGraphViewHolder="$:/plugins/felixhayashi/taskgraph/misc/defaultViewHolder";t.ref.graphBar="$:/plugins/felixhayashi/taskgraph/misc/advancedEditorBar";t.user=$tw.wiki.getTiddlerData(t.ref.tgOptions,a.getEmptyMap());t.user.vis=$tw.wiki.getTiddlerData(t.ref.visOptions,a.getEmptyMap());if(!t.field)t.field=a.getEmptyMap();t.field.viewMarker="isview";t.field.nodeId=t.user.field_nodeId?t.user.field_nodeId:"id";t.field.nodeLabel=t.user.field_nodeLabel?t.user.field_nodeLabel:"title";if(!t.misc)t.misc=a.getEmptyMap();t.misc.unknownEdgeLabel="(!noname!)";if(!t.filter)t.filter=a.getEmptyMap();t.filter.allSharedEdges="[prefix["+t.path.edges+"]]";t.filter.allSharedEdgesByLabel="[prefix["+t.path.edges+"]removeprefix["+t.path.edges+"/]]";t.filter.allViews="[all[tiddlers+shadows]has["+t.field.viewMarker+"]]";t.filter.allViewsByLabel="[all[tiddlers+shadows]has["+t.field.viewMarker+"]removeprefix["+t.path.views+"/]]"};var i=function(e){var t=e;var i=function(){};if($tw.taskgraph.opt.user.debug===true&&console){t.logger=function(){if(arguments.length<2)return;var a=Array.prototype.slice.call(arguments);var e=a.shift(a);var t=console.hasOwnProperty(e)?e:"debug";console[t].apply(console,a)}}else{t.logger=i}t.notify=$tw.taskgraph.opt.user.notifications?a.notify:i;return t};var r=function(){var a=function(){var a=[];a.push("prefix["+$tw.taskgraph.opt.path.options+"]");a.push("!has[draft.of]");return"["+a.join("")+"]"}.call(this);$tw.taskgraph.logger("log","Caretaker's filter: \""+a+'"');return $tw.wiki.compileFilter(a)};exports.startup=function(){$tw.taskgraph=a.getEmptyMap();$tw.taskgraph.opt=a.getEmptyMap();t($tw.taskgraph.opt);i($tw.taskgraph,$tw.taskgraph.opt);$tw.taskgraph.curMouse={};document.addEventListener("drop",function(a){$tw.taskgraph.mouseDropPos.x=a.clientX,$tw.taskgraph.mouseDropPos.y=a.clientY},false);$tw.taskgraph.adapter=new e;$tw.taskgraph.logger("warn","Taskgraph's caretaker was started");$tw.taskgraph.logger("log","Registered namespace and options");$tw.taskgraph.edgeChanges=[];var s=r();$tw.wiki.addEventListener("change",function(e){$tw.taskgraph.logger("warn","These tiddlers changed:",e);var r=a.getMatches(s,Object.keys(e));if(!r.length)return;$tw.taskgraph.logger("warn","Global options will be rebuild");t($tw.taskgraph);i($tw.taskgraph)})}})();