/*\

title: $:/plugins/felixhayashi/taskgraph/taskgraph.js
type: application/javascript
module-type: widget

@preserve

\*/
!function(){"use strict";var e=require("$:/core/modules/widgets/widget.js").widget,t=require("$:/plugins/felixhayashi/taskgraph/utils.js").utils,i=require("$:/plugins/felixhayashi/vis/vis.js"),o=require("$:/plugins/felixhayashi/taskgraph/view_abstraction.js").ViewAbstraction,s=function(e,i){this.initialise(e,i),this.adapter=$tw.taskgraph.adapter,this.opt=$tw.taskgraph.opt,this.callbacks=t.getEmptyMap(),this.computeAttributes(),this.addEventListeners([{type:"tm-create-view",handler:function(){this.handleCreateView(null)}},{type:"tm-rename-view",handler:this.handleRenameView},{type:"tm-delete-view",handler:this.handleDeleteView},{type:"tm-store-position",handler:this.handleStorePositions},{type:"tm-edit-node-filter",handler:this.handleEditNodeFilter}])};s.prototype=new e,s.prototype.registerParentDomNode=function(e){this.parentDomNode=e,$tw.utils.hasClass(e,"taskgraph")||($tw.utils.addClass(e,"taskgraph"),"false"!==this.getAttribute("click-to-use")&&$tw.utils.addClass(e,"click-to-use"),this.getAttribute("class")&&$tw.utils.addClass(e,this.getAttribute("class")))},s.prototype.registerCallback=function(e,t,i){this.logger("debug",'A callback was registered for changes of "'+e+'"'),this.callbacks[e]={execute:t,isDeleteOnCall:"Boolean"==typeof i?i:!0}},s.prototype.removeCallback=function(e){this.callbacks[e]&&(this.logger("debug",'A callback for "'+e+'" will be deleted'),delete this.callbacks[e])},s.prototype.checkForCallbacks=function(e){if(0==this.callbacks.length)return void this.logger("debug","No registered callbacks exist at the moment");for(var t in e)this.callbacks[t]&&(!this.wiki.getTiddler(t)||(this.logger("debug",'A callback for "'+t+'" will be executed'),this.callbacks[t].execute(t),this.callbacks.isDeleteOnCall))&&this.removeCallback(t)},s.prototype.handleConnectionEvent=function(e,i){this.logger("info","Opening a dialog for creating an edge");var o=this.getView().getAllEdgesFilterExpr(!0),s={edgeFilterExpr:o,fromLabel:this.adapter.selectNodeById(e.from).label,toLabel:this.adapter.selectNodeById(e.to).label};this.openDialog(this.opt.ref.edgeTypeDialog,s,function(o,s){if(o){var r=t.getText(s);e.label=r&&r!==this.opt.misc.unknownEdgeLabel?r:this.opt.misc.unknownEdgeLabel,this.logger("debug","The edgetype is set to: "+e.label),this.adapter.insertEdge(e,this.getView()),$tw.taskgraph.notify("edge added")}"function"==typeof i&&i(o)})},s.prototype.openDialog=function(e,i,o){e=t.getTiddler(e);var s=this.opt.path.dialogs+"/"+t.genUUID(),r={title:s,output:s+"/output",result:s+"/result",footer:this.wiki.getTiddler(this.opt.ref.dialogStandardFooter).fields.text};i&&i.confirmButtonLabel||(r.confirmButtonLabel="Okay"),i&&i.cancelButtonLabel||(r.cancelButtonLabel="Cancel");var a=new $tw.Tiddler(e,i,r);this.logger("debug","A dialog will be opened based on the following tiddler:",a),this.wiki.addTiddler(a),this.registerCallback(r.result,function(e){var i=this.wiki.getTiddler(e),s=i.fields.text;if(s)var a=this.wiki.getTiddler(r.output);else{var a=null;$tw.taskgraph.notify("operation cancelled")}"function"==typeof o&&o.call(this,s,a),t.deleteTiddlers([r.title,r.output,r.result])}.bind(this),!0),this.dispatchEvent({type:"tm-modal",param:a.fields.title,paramObject:a.fields})},s.prototype.openStandardConfirmDialog=function(e,t){var i={message:t,confirmButtonLabel:"Yes mom, I know what I'm doing!",cancelButtonLabel:"Uuups, hell no!"};this.openDialog(this.opt.ref.confirmationDialog,i,e)},s.prototype.logger=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift("@"+this.objectId.toUpperCase()),t.unshift(e),$tw.taskgraph.logger.apply(this,t)},s.prototype.render=function(e){this.registerParentDomNode(e),this.objectId=this.getAttribute("object-id")?this.getAttribute("object-id"):t.genUUID(),this.viewHolderRef=this.getViewHolderRef(),this.view=this.getView(),this.handleSpecialViews(),this.editorMode=this.getAttribute("editor"),"advanced"===this.editorMode&&this.initAndRenderEditorBar(e),this.initAndRenderGraph(e)},s.prototype.handleSpecialViews=function(){if("quick_connect"===this.view.getLabel()){var e="$:/temp/felixhayashi/taskgraph/quick_connect_search",t="[search{"+e+"}!is[system]limit[10]][field:title["+e+"]]";this.view.setNodeFilter(t)}},s.prototype.initAndRenderEditorBar=function(e){this.graphBarDomNode=document.createElement("div"),$tw.utils.addClass(this.graphBarDomNode,"filterbar"),e.appendChild(this.graphBarDomNode),this.rebuildChildWidgets(),this.renderChildren(this.graphBarDomNode)},s.prototype.rebuildChildWidgets=function(){if("vis"!==this.editorMode){this.setVariable("var.viewLabel",this.getView().getLabel()),this.setVariable("var.isViewBound",String(this.isViewBound())),this.setVariable("var.ref.view",this.getView().getRoot()),this.setVariable("var.ref.viewHolder",this.getViewHolderRef()),this.setVariable("var.ref.edgeFilter",this.getView().getPaths().edgeFilter),this.setVariable("var.edgeFilterExpr",this.view.getAllEdgesFilterExpr());var e={type:"tiddler",attributes:{tiddler:{type:"string",value:this.getView().getRoot()}},children:[{type:"transclude",attributes:{tiddler:{type:"string",value:this.opt.ref.graphBar}}}]};this.makeChildWidgets([e])}},s.prototype.refresh=function(e){this.checkForCallbacks(e);var t=this.isViewSwitched(e),i=this.getView().refresh(e);t?(this.logger("warn","View switched"),this.view=this.getView(!0),this.rebuildGraph()):i.length?(this.logger("warn","View modified"),this.rebuildGraph()):this.checkForGraphUpdates(e),this.editorMode&&this.refreshEditorBar(e,t,i)},s.prototype.rebuildGraph=function(){this.logger("debug","Rebuilding graph"),this.hasNetworkStabilized=!1,this.graphData=this.getGraphData(!0),this.network.setData(this.graphData)},s.prototype.getGraphData=function(e){if(!e&&this.graphData)return this.graphData;var i=this.getView().getNodeFilter("expression"),o=this.adapter.selectNodesByFilter(i,{view:this.getView()}),s=this.adapter.selectEdgesByEndpoints(o,{view:this.getView(),endpointsInSet:">=1"});if("quick_connect"===this.view.getLabel()){var r=this.adapter.selectNodesByReference([this.getVariable("currentTiddler")],{outputType:"array",addProperties:{x:0,y:0,borderWidth:1,color:{background:"#E6B293",border:"#FF6700"}}});o.update(r)}if(this.getView().isConfEnabled("display_neighbours")){var a=this.adapter.selectNeighbours(o,{edges:s,outputType:"array",view:this.getView(),addProperties:{group:"neighbours"}});t.inject(a,o)}var n={edges:s,nodes:o,nodesByLabel:t.getLookupTable(o,"label")};return n},s.prototype.isViewBound=function(){return t.startsWith(this.getViewHolderRef(),this.opt.path.localHolders)},s.prototype.isViewSwitched=function(e){return this.isViewBound()?!1:t.hasOwnProp(e,this.getViewHolderRef())},s.prototype.refreshEditorBar=function(e,t,i){return t||i.length?(this.removeChildDomNodes(),this.rebuildChildWidgets(),this.renderChildren(this.graphBarDomNode),!0):this.refreshChildren(e)},s.prototype.checkForGraphUpdates=function(e){var i=this.getView().getNodeFilter("compiled"),o=t.getMatches(i,Object.keys(e));if(o.length)return this.logger("info","modified nodes",o),void this.rebuildGraph();for(var s in e)if(this.graphData.nodesByLabel[s])return this.logger("info","obsolete node",o),void this.rebuildGraph();var r=this.getView().getEdgeFilter("compiled"),a=t.getMatches(r,Object.keys(e));return a.length?(this.logger("info","changed edge stores",a),void this.rebuildGraph()):void 0},s.prototype.initAndRenderGraph=function(e){this.logger("info","Initializing and rendering the graph"),this.graphDomNode=document.createElement("div"),$tw.utils.addClass(this.graphDomNode,"vis-graph"),e.appendChild(this.graphDomNode),this.getAttribute("height")?this.graphDomNode.style.height=this.getAttribute("height"):(window.addEventListener("resize",this.handleResizeEvent.bind(this),!1),this.maxEnlarge(this.graphDomNode)),window.addEventListener("click",this.handleClickEvent.bind(this),!1),this.graphOptions=this.getGraphOptions();var t={nodes:[],edges:[]};this.network=new i.Network(this.graphDomNode,t,this.graphOptions),this.editorMode||this.registerCallback("$:/state/sidebar",this.repaintGraph.bind(this),!1),this.network.on("doubleClick",this.handleDoubleClickEvent.bind(this)),this.network.on("stabilized",this.handleStabilizedEvent.bind(this)),this.network.on("dragStart",function(e){e.nodeIds.length&&this.setNodesMoveable([e.nodeIds[0]],!0)}.bind(this)),this.network.on("dragEnd",function(e){if(e.nodeIds.length){var t=this.getView().isConfEnabled("physics_mode");this.setNodesMoveable([e.nodeIds[0]],t),this.handleStorePositions()}}.bind(this)),this.rebuildGraph()},s.prototype.getGraphOptions=function(){var e=this.wiki.getTiddlerData(this.opt.ref.visOptions);return e.onDelete=this.handleRemoveElement.bind(this),e.onConnect=function(e){this.handleConnectionEvent(e)}.bind(this),e.onAdd=function(e){this.adapter.insertNode(e,{view:this.getView(),editNodeOnCreate:!1})}.bind(this),e.onEditEdge=function(e){var t=this.graphData.edges.get(e.id);$tw.utils.extend(t,e),this.adapter.deleteEdgesFromStore([{id:t.id,label:t.label}],this.getView()),this.adapter.insertEdge(t,this.getView())}.bind(this),e.dataManipulation={enabled:this.editorMode?!0:!1,initiallyVisible:"quick_connect"!==this.view.getLabel()&&"search_visualizer"!==this.view.getLabel()},e.navigation={enabled:!0},e.clickToUse="false"!==this.getAttribute("click-to-use"),e},s.prototype.handleCreateView=function(){this.openDialog(this.opt.ref.viewNameDialog,null,function(e,i){if(e){var o=this.adapter.createView(t.getText(i));this.setView(o.getRoot())}})},s.prototype.handleRenameView=function(){return"default"===this.getView().getLabel()?void $tw.taskgraph.notify("Thou shalt not rename the default view!"):void this.openDialog(this.opt.ref.viewNameDialog,null,function(e,i){e&&(this.view.rename(t.getText(i)),this.setView(this.view.getRoot()))})},s.prototype.handleDeleteView=function(){var e=this.getView().getLabel();if("default"===e)return void $tw.taskgraph.notify("Thou shalt not kill the default view!");var i="[regexp:text[<\\$taskgraph.*?view=."+e+"..*?>]]",o=t.getMatches(i);if(o.length){var s={count:o.length.toString(),filter:i};return void this.openDialog(this.opt.ref.notAllowedToDeleteViewDialog,s,null)}var r="You are about to delete the view ''"+e+"'' (no tiddler currently references this view).";this.openStandardConfirmDialog(function(t){t&&(this.getView().destroy(),this.setView(this.opt.path.views+"/default"),$tw.taskgraph.notify('view "'+e+'" deleted '))},r)},s.prototype.handleRemoveElement=function(e,t){if(e.edges.length&&!e.nodes.length&&(this.adapter.deleteEdgesFromStore(this.graphData.edges.get(e.edges),this.getView()),t(e),$tw.taskgraph.notify("edge"+(e.edges.length>1?"s":"")+" removed")),e.nodes.length){var i={subtitle:"Please confirm your choice",text:"By deleting a node you are also deleting the corresponding tiddler __and__ any edges connected to that node. Really proceed?"};this.openDialog(null,i,function(t){if(t){var i=this.graphData.nodes.get(e.nodes),o=this.graphData.edges.get(e.edges);this.adapter.deleteNodesFromStore(i),this.adapter.deleteEdgesFromStore(o,this.getView()),$tw.taskgraph.notify("node"+(e.nodes.length>1?"s":"")+" removed")}})}},s.prototype.handleStorePositions=function(){this.adapter.storePositions(this.network.getPositions(),this.getView()),$tw.taskgraph.notify("positions stored")},s.prototype.handleEditNodeFilter=function(){var e={prettyFilter:this.getView().getPrettyNodeFilterExpr()};this.openDialog(this.opt.ref.editNodeFilter,e,function(e,i){e&&this.getView().setNodeFilter(t.getText(i))})},s.prototype.handleStabilizedEvent=function(e){this.hasNetworkStabilized||(this.hasNetworkStabilized=!0,this.logger("log","Network stabilized after "+e.iterations+" iterations"),this.network.storePositions(),this.setNodesMoveable(this.graphData.nodes.getIds(),this.getView().isConfEnabled("physics_mode")))},s.prototype.setNodesMoveable=function(e,t){for(var i=[],o=0;o<e.length;o++)i.push({id:e[o],allowedToMoveX:t,allowedToMoveY:t});this.graphData.nodes.update(i)},s.prototype.handleDoubleClickEvent=function(e){if(e.nodes.length||e.edges.length){if(e.nodes.length){this.logger("debug","Doubleclicked on a node");var t=e.nodes[0],i=this.graphData.nodes.get(t).label}else if(e.edges.length){this.logger("debug","Doubleclicked on an Edge");var o=this.graphData.edges.get(e.edges[0]),s=o.label?o.label:this.opt.misc.unknownEdgeLabel,i=this.getView().getEdgeStoreLocation()+"/"+s}this.dispatchEvent({type:"tm-navigate",navigateTo:i})}else{if(!this.editorMode)return;this.openDialog(this.opt.ref.nodeNameDialog,null,function(t,i){if(t){var o=e.pointer.canvas;o.label=i?i.fields.text:"New Node",this.adapter.insertNode(o,{view:this.getView(),editNodeOnCreate:!1})}})}},s.prototype.handleResizeEvent=function(){return document.body.contains(this.parentDomNode)?void(this.network&&(this.maxEnlarge(this.graphDomNode),this.repaintGraph())):void window.removeEventListener("resize",this.handleResizeEvent)},s.prototype.handleClickEvent=function(e){if(!document.body.contains(this.parentDomNode))return void window.removeEventListener("click",this.handleClickEvent);if(this.network){var t=document.elementFromPoint(e.clientX,e.clientY);this.parentDomNode.contains(t)||this.network.selectNodes([])}},s.prototype.getViewHolderRef=function(){if(this.viewHolderRef)return this.viewHolderRef;this.logger("info","Retrieving or generating the view holder reference");var e=this.getAttribute("view");if(e){this.logger("log",'User wants to bind view "'+e+'" to graph');var i=this.opt.path.views+"/"+e;if(this.wiki.getTiddler(i)){var o=this.opt.path.localHolders+"/"+t.genUUID();this.logger("log",'Created an independent temporary view holder "'+o+'"'),this.wiki.addTiddler(new $tw.Tiddler({title:o,text:i})),this.logger("log",'View "'+i+'" inserted into independend holder')}else this.logger("log",'View "'+e+'" does not exist')}if("undefined"==typeof o){this.logger("log","Using default (global) view holder");var o=this.opt.ref.defaultGraphViewHolder}return o},s.prototype.setView=function(e,t){e&&(t||(t=this.viewHolderRef),this.logger("info",'Inserting view "'+e+'" into holder "'+t+'"'),this.wiki.addTiddler(new $tw.Tiddler({title:t,text:e}))),this.view=this.getView(!0)},s.prototype.getView=function(e){if(!e&&this.view)return this.view;var i=this.getViewHolderRef(),s=this.wiki.getTiddler(i).fields.text;return this.logger("info",'Retrieved view "'+s+'" from holder "'+i+'"'),t.tiddlerExists(s)?new o(s):(this.logger("log",'Warning: View "'+s+"\" doesn't exist. Default is used instead."),new o("default"))},s.prototype.repaintGraph=function(){this.logger("info","Repainting the whole graph"),this.network.redraw(),this.network.zoomExtent()},s.prototype.maxEnlarge=function(e){var i=window.innerHeight,o=t.getDomNodePos(e).y,s=10,r=i-o-s;e.style.height=r+"px"},exports.taskgraph=s}();