/*\

title: $:/plugins/felixhayashi/tiddlymap/js/startup/listener
type: application/javascript
module-type: startup

@module TiddlyMap
@preserve

\*/
(function(){"use strict";var e=require("$:/plugins/felixhayashi/tiddlymap/js/NodeType").NodeType;var t=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType").EdgeType;var a=require("$:/plugins/felixhayashi/tiddlymap/js/utils").utils;var i=require("$:/plugins/felixhayashi/tiddlymap/js/config/vis").config;var r=function(){this.adapter=$tw.tmap.adapter;this.wiki=$tw.wiki;this.logger=$tw.tmap.logger;this.opt=$tw.tmap.opt;this.dialogManager=$tw.tmap.dialogManager;a.addListeners({"tmap:tm-remove-edge":this.handleRemoveEdge,"tmap:tm-load-type-form":this.handleLoadTypeForm,"tmap:tm-save-type-form":this.handleSaveTypeForm,"tmap:tm-create-type":this.handleCreateType,"tmap:tm-create-edge":this.handleCreateEdge,"tmap:tm-suppress-dialog":this.handleSuppressDialog,"tmap:tm-generate-widget":this.handleGenerateWidget,"tmap:tm-download-graph":this.handleDownloadGraph,"tmap:tm-configure-system":this.handleConfigureSystem,"tmap:tm-manage-edge-types":this.handleOpenTypeManager,"tmap:tm-manage-node-types":this.handleOpenTypeManager,"tmap:tm-cancel-dialog":this.handleCancelDialog,"tmap:tm-confirm-dialog":this.handleConfirmDialog},$tw.rootWidget,this)};r.prototype.handleCancelDialog=function(e){a.setField(e.param,"text","")};r.prototype.handleConfirmDialog=function(e){a.setField(e.param,"text","1")};r.prototype.handleSuppressDialog=function(e){if(a.isTrue(e.paramObject.suppress,false)){a.setEntry(this.opt.ref.sysUserConf,"suppressedDialogs."+e.paramObject.dialog,true)}};r.prototype.handleDownloadGraph=function(e){var t=this.adapter.getGraph({view:e.paramObject.view});t.nodes=a.convert(t.nodes,"array");t.edges=a.convert(t.edges,"array");var i="$:/temp/tmap/export";a.setField(i,"text",JSON.stringify(t,null,2));$tw.rootWidget.dispatchEvent({type:"tm-download-file",param:i,paramObject:{filename:e.paramObject.view+".json"}})};r.prototype.handleConfigureSystem=function(){var e={dialog:{preselects:{"vis-inherited":JSON.stringify(i),"config.vis":a.getText(this.opt.ref.visUserConf),"config.sys":this.opt.config.sys}}};var t="configureTiddlyMap";this.dialogManager.open(t,e,function(e,t){if(e&&t){var i=a.getPropertiesByPrefix(t.fields,"config.sys.",true);$tw.wiki.setTiddlerData(this.opt.ref.sysUserConf,i);a.setField(this.opt.ref.visUserConf,"text",t.fields["config.vis"])}}.bind(this))};r.prototype.handleGenerateWidget=function(e){if(!e.paramObject)e.paramObject={};var t={dialog:{preselects:{view:e.paramObject.view||this.opt.misc.defaultViewLabel}}};this.dialogManager.open("getWidgetCode",t)};r.prototype.handleRemoveEdge=function(e){this.adapter.deleteEdge(e.paramObject)};r.prototype.handleCreateEdge=function(e){var t=e.paramObject.from;var i=e.paramObject.to;var r=e.paramObject.force;if(!t||!i)return;if(a.tiddlerExists(t)&&a.tiddlerExists(i)||r){a.addTiddler(i);a.addTiddler(t);var p={from:this.adapter.makeNode(t).id,to:this.adapter.makeNode(i).id,type:e.paramObject.label,id:e.paramObject.id};this.adapter.insertEdge(p);$tw.tmap.notify("Edge inserted")}};r.prototype.handleOpenTypeManager=function(e){if(!e.paramObject)e.paramObject={};var t=e.type.match(/tmap:tm-(.*)/)[1];if(t==="manage-edge-types"){var a="Edge-Type Manager";var i=this.opt.selector.allEdgeTypes;var r=this.opt.path.edgeTypes}else{var a="Node-Type Manager";var i=this.opt.selector.allNodeTypes;var r=this.opt.path.nodeTypes}var p={mode:t,topic:a,searchSelector:i,typeRootPath:r};var d=this.dialogManager.open("MapElementTypeManager",p);if(e.paramObject.type){this.handleLoadTypeForm({paramObject:{mode:t,id:e.paramObject.type,output:d.fields["output"]}})}};r.prototype.handleLoadTypeForm=function(i){var r=i.paramObject.output;var p=i.paramObject.mode==="manage-edge-types"?new t(i.paramObject.id):new e(i.paramObject.id);p.save(r);if(i.paramObject.mode==="manage-edge-types"){var d=this.adapter.selectEdgesByType(p);var o=Object.keys(d).length;a.setField(r,"temp.usageCount",o)}$tw.wiki.addTiddler(new $tw.Tiddler(a.getTiddler(r),{typeTRef:p.fullPath,"temp.idImmutable":p.isShipped?"true":"","temp.newId":p.id,"vis-inherited":JSON.stringify(this.opt.config.vis)}));a.deleteByPrefix("$:/state/tabs/MapElementTypeManager")};r.prototype.handleSaveTypeForm=function(i){var r=a.getTiddler(i.paramObject.output);if(!r)return;var p=i.paramObject.mode;var d=p==="manage-edge-types"?new t(r.fields.id):new e(r.fields.id);if(a.isTrue(r.fields["temp.deleteType"],false)){this.deleteType(p,d,r)}else{this.saveType(p,d,r)}};r.prototype.deleteType=function(e,t,i){this.logger("debug","Deleting type",t);if(e==="manage-edge-types"){this.adapter._processEdgesWithType(t,{action:"delete"})}else{this.adapter.removeNodeType(t)}this.wiki.addTiddler(new $tw.Tiddler({title:a.getTiddlerRef(i)}));$tw.tmap.notify("Deleted type")};r.prototype.saveType=function(t,i,r){var p=a.getTiddler(r);i.loadFromTiddler(p);i.save();var d=p.fields["temp.newId"];if(d&&d!==p.fields["id"]){if(t==="manage-edge-types"){this.adapter._processEdgesWithType(i,{action:"rename",newName:d})}else{var o=new e(d);o.load(i);o.save();$tw.wiki.deleteTiddler(i.fullPath)}a.setField(p,"id",d)}$tw.tmap.notify("Saved type data")};r.prototype.handleCreateType=function(a){var i=a.paramObject.id||"New type";var r=a.paramObject.mode==="manage-edge-types"?new t(i):new e(i);r.save();this.handleLoadTypeForm({paramObject:{id:r.id,mode:a.paramObject.mode,output:a.paramObject.output}})};r.prototype.getTypeFromEvent=function(a){return a.paramObject.mode==="manage-edge-types"?new t(a.paramObject.id):new e(a.paramObject.id)};exports.name="tmap.listener";exports.platforms=["browser"];exports.after=["rootwidget","tmap.caretaker"];exports.before=["story"];exports.synchronous=true;exports.startup=function(){new r}})();