/*\

title: $:/plugins/felixhayashi/tiddlymap/view_abstraction.js
type: application/javascript
module-type: library

@preserve

\*/
(function(){var t=require("$:/plugins/felixhayashi/tiddlymap/utils.js").utils;var e=function(i,r){if(i instanceof e){return i}this.wiki=$tw.wiki;this.opt=$tw.tiddlymap.opt;this.logger=$tw.tiddlymap.logger;this.path=t.getEmptyMap();this.path.config=this._getConfigPath(i);if(r){this._createView()}else if(!this.exists()){return}this.path.map=this.path.config+"/map";this.path.nodeFilter=this.path.config+"/filter/nodes";this.path.edgeFilter=this.path.config+"/filter/edges";this._ignoreOnNextRebuild=t.getEmptyMap();this.rebuildCache(t.getValues(this.path))};e.prototype._getConfigPath=function(e){if(e instanceof $tw.Tiddler){return e.fields.title}if(typeof e=="string"){if(t.startsWith(e,this.opt.path.views)){var i=this.opt.path.views+"/";e=e.substr(i.length)}if(e.indexOf("/")===-1){return this.opt.path.views+"/"+e}}};e.prototype.getPaths=function(){return this.path};e.prototype._createView=function(){if(this.exists()){this.destroy()}var e={};e.title=this.path.config;e[this.opt.field.viewMarker]=true;e.id=t.genUUID();this.wiki.addTiddler(new $tw.Tiddler(e))};e.prototype.refresh=function(t){return this.rebuildCache(Object.keys(t))};e.prototype.rebuildCache=function(e,i){if(!this.exists())return[];if(e.indexOf(this.path.config)!=-1){this.logger("debug","View's config is requested to be rebuild -> trigger full rebuild");e=t.getValues(this.path)}var r=this._ignoreOnNextRebuild;this._ignoreOnNextRebuild=t.getEmptyMap();var s=[];for(var o=0;o<e.length;o++){var n=e[o];if(!i&&r[n]){continue}switch(n){case this.path.config:this.config=this.getConfig(null,true);break;case this.path.map:this.positions=this.getPositions(true);break;case this.path.nodeFilter:this.nodeFilter=this.getNodeFilter(null,true);break;case this.path.edgeFilter:this.edgeFilter=this.getEdgeFilter(null,true);break;default:continue}s.push(n)}return s};e.prototype.exists=function(){return t.tiddlerExists(this.path.config)};e.prototype.getRoot=function(){return this.path.config};e.prototype.getLabel=function(){if(!this.exists())return;return t.getBasename(this.path.config)};e.prototype.destroy=function(){if(!this.exists())return;var e="[prefix["+this.getRoot()+"]]";t.deleteTiddlers(t.getMatches(e));this.path=t.getEmptyMap()};e.prototype.rename=function(e){if(!this.exists()||typeof e!=="string"||e.indexOf("/")!==-1){return}var i=this.getLabel();if(i===e){return}for(index in this.path){var r=this.wiki.getTiddler(this.path[index]);if(!r)continue;this.path[index]=this.path[index].replace(i,e);this.wiki.addTiddler(new $tw.Tiddler(r,{title:this.path[index]}));this.wiki.deleteTiddler(r.fields.title)}this.rebuildCache(t.getValues(this.path),true)};e.prototype.isConfEnabled=function(t){return this.getConfig(t)==="true"};e.prototype.getConfig=function(e,i){if(!this.exists()){return t.getEmptyMap()}if(!i&&this.config){var r=this.config}else{var s=this.wiki.getTiddler(this.path.config).fields;var r=t.getPropertiesByPrefix(s,"config.");defaults={"config.layout.active":"user"};$tw.utils.extend(defaults,r)}return e?r[t.startsWith(e,"config.")?e:"config."+e]:r};e.prototype.getHierarchyEdgeTypes=function(){if(this.getConfig("layout.active")!=="hierarchical")return[];var e=t.getPropertiesByPrefix(this.getConfig(),"config.layout.hierarchical.order-by-",true);var i=t.getEmptyMap();for(var r in e){if(e[r]==="true"){var s=t.getTiddlerById(r);if(s){i[t.getBasename(s.fields.title)]=true}}}return i};e.prototype.setConfig=function(t){this.logger("log","Updating config",this.config,"with",t);$tw.utils.extend(this.config,t);this.wiki.addTiddler(new $tw.Tiddler(this.wiki.getTiddler(this.path.config),this.config));this._ignoreOnNextRebuild[this.path.config]=true};e.prototype.removeNodeFromFilter=function(t){var e=this.getNodeFilter("expression");var i=e.replace("[["+t.label+"]]","").replace(this._getAddNodeFilterPart(t),"");if(i!==e){this.setNodeFilter(i);return true}return false};e.prototype._getAddNodeFilterPart=function(t){return"[field:"+this.opt.field.nodeId+"["+t.id+"]]"};e.prototype.setNodeFilter=function(t){if(!this.exists())return;t=t.replace("\n"," ");if(this.getNodeFilter.expression===t){return}this.wiki.addTiddler(new $tw.Tiddler({title:this.path.nodeFilter,filter:t.replace("\n"," ")}));this.logger("debug","Node filter set to",t);this.nodeFilter=this.getNodeFilter(null,true);this._ignoreOnNextRebuild[this.path.nodeFilter]=true};e.prototype.getPrettyNodeFilterExpr=function(){var t=this.getNodeFilter("expression").trim().replace("][","] [");var e=/[\+\-]?\[.+?[\]\}\>]\]/g;var i=t.match(e);t=t.replace(e," [] ").trim();var r=t.split(/\s+/);var s=0;var o=[];for(var n=0;n<r.length;n++){o[n]=r[n]==="[]"?i[s++]:r[n]}return o.join("\n")};e.prototype.appendToNodeFilter=function(t){var t=this.getNodeFilter("expression")+" "+t;this.setNodeFilter(t)};e.prototype.addNodeToView=function(t){this.appendToNodeFilter(this._getAddNodeFilterPart(t));this.setNodePosition(t)};e.prototype.getEdgeStoreLocation=function(){return this.isConfEnabled("private_edge_mode")?this.getRoot()+"/graph/edges":this.opt.path.edges};e.prototype.getAllEdgesFilterExpr=function(t){var e=t?"removeprefix["+this.getEdgeStoreLocation()+"/]":"";return"[prefix["+this.getEdgeStoreLocation()+"]"+e+"]"};e.prototype.getEdgeFilter=function(e,i){if(!i&&this.edgeFilter){var r=this.edgeFilter}else{var r=t.getEmptyMap();var s=$tw.wiki.getTiddler(this.path.edgeFilter);r.defaultIsShow=!s||s.fields["default-is-show"]!=="false";r.expression=function(){var e=[];if(r.defaultIsShow){e.push("prefix["+this.getEdgeStoreLocation()+"]")}if(s){var i=t.getPropertiesByPrefix(s.fields,"show-",true);for(var o in i){var n=i[o]!=="false";if(r.defaultIsShow!==n){e.push((n?"":"!")+"field:id["+o+"]")}}}return"["+e.join("")+"]"}.call(this);r.compiled=this.wiki.compileFilter(r.expression)}return e?r[e]:r};e.prototype.getNodeFilter=function(e,i){if(!i&&this.nodeFilter){var r=this.nodeFilter}else{var r=t.getEmptyMap();var s=$tw.wiki.getTiddler(this.path.nodeFilter);if(s&&typeof s.fields.filter==="string"){r.expression=s.fields.filter}else{r.expression=""}r.compiled=this.wiki.compileFilter(r.expression)}return e?r[e]:r};e.prototype.getPositions=function(t){if(!t&&this.positions){return this.positions}return $tw.wiki.getTiddlerData(this.path.map,{})};e.prototype.setPositions=function(t){if(!this.exists())return;$tw.tiddlymap.logger("log",'Storing positions in view "'+this.getLabel()+'"');if(typeof t!=="object")return;this.wiki.setTiddlerData(this.path.map,t);this.positions=t;this._ignoreOnNextRebuild[this.path.map]=true};e.prototype.setNodePosition=function(t){if(t&&t.x&&t.y){var e=this.getPositions();e[t.id]={x:t.x,y:t.y};this.setPositions(e)}};exports.ViewAbstraction=e})();