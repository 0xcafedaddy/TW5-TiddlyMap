/*\

title: $:/plugins/felixhayashi/tiddlymap/adapter.js
type: application/javascript
module-type: library

@preserve

\*/
var utils=require("$:/plugins/felixhayashi/tiddlymap/utils.js").utils;var ViewAbstraction=require("$:/plugins/felixhayashi/tiddlymap/view_abstraction.js").ViewAbstraction;var vis=require("$:/plugins/felixhayashi/vis/vis.js");var Adapter=function(e){this.wiki=e?e:$tw.wiki;this.opt=$tw.tiddlymap.opt;this.logger=$tw.tiddlymap.logger};Adapter.prototype.insertEdge=function(e,t){if(typeof e!=="object"||!e.from||!e.to)return;t=new ViewAbstraction(t);var i=e.label?e.label:this.opt.misc.unknownEdgeLabel;var r=t.getEdgeStoreLocation()+"/"+i;var s=this.wiki.getTiddlerData(r,[]);delete e.label;if(e.id){var o=utils.keyOfItemWithProperty(s,"id",e.id);if(typeof o==="undefined"){o=s.length}}else{e.id=utils.genUUID();var o=s.length}this.logger("info",'Inserting edge into store  "'+r+'"',e);s[o]=e;var a={};var d=this.wiki.getTiddler(r);if(!d||!d.fields.id){a.id=utils.genUUID()}this.wiki.setTiddlerData(r,s,a);e.label=i;$tw.tiddlymap.edgeChanges.push({type:"insert",edge:e})};Adapter.prototype.selectEdgesByFilter=function(e,t){var i=utils.getMatches(e);var r=[];for(var s=0;s<i.length;s++){r.push(utils.getBasename(i[s]))}return this.selectEdgesByLabel(r,t)};Adapter.prototype.selectEdgesByLabel=function(e,t){if(typeof t!=="object")t=utils.getEmptyMap();var i=new ViewAbstraction(t.view);var r=i.getEdgeStoreLocation();var s=utils.getEmptyMap();for(var o=0;o<e.length;o++){var a=r+"/"+e[o];if(!utils.tiddlerExists(a))continue;var d=this.wiki.getTiddlerData(a);for(var l=0;l<d.length;l++){if(e[o]!==this.opt.misc.unknownEdgeLabel){d[l].label=e[o]}s[d[l].id]=d[l]}}return utils.convert(s,t.outputType)};Adapter.prototype.selectEdgesByEndpoints=function(e,t){if(typeof t!=="object")t=utils.getEmptyMap();var i=new ViewAbstraction(t.view);var r=i.exists()?t.view.getEdgeFilter("compiled"):this.opt.filter.allSharedEdges;var s=this.selectEdgesByFilter(r,{outputType:"array",view:i});return this.filterEdgesByEndpoints(s,e,t)};Adapter.prototype.filterEdgesByEndpoints=function(e,t,i){if(typeof i!=="object")i=utils.getEmptyMap();e=utils.convert(e,"array");var r=/^(=1|>=1|=2)$/;var s=r.test(i.endpointsInSet)?i.endpointsInSet:">=1";var t=utils.getLookupTable(t,"id");var o=utils.getEmptyMap();for(var a=0;a<e.length;a++){var d=e[a];switch(s){case"=2":isMatch=t[d.from];break;case">=1":isMatch=t[d.from]||t[d.to];break;case"=1":isMatch=t[d.from]===undefined&&t[d.to]||t[d.to]===undefined&&t[d.from];break;default:isMatch=false}if(isMatch)o[d.id]=d}return utils.convert(o,i.outputType)};Adapter.prototype.selectNodesByFilter=function(e,t){var i=utils.getMatches(e);return this.selectNodesByReference(i,t)};Adapter.prototype.selectNodesByReference=function(e,t){if(typeof t!=="object")t=utils.getEmptyMap();var i=t.addProperties;var r=utils.getEmptyMap();for(var s=0;s<e.length;s++){var o=this.createNode(e[s],i);if(o){r[o.id]=o}}if(t.view){this._restorePositions(r,t.view)}return utils.convert(r,t.outputType)};Adapter.prototype.createNode=function(e,t){var i=this.wiki.getTiddler(utils.getTiddlerReference(e));if(!i||i.isDraft()||this.wiki.isSystemTiddler(i.fields.title)){return}if(!i.fields[this.opt.field.nodeId]){var r=utils.getEmptyMap();r[this.opt.field.nodeId]=utils.genUUID();i=new $tw.Tiddler(i,r);$tw.wiki.addTiddler(i)}var s=utils.getEmptyMap();s.label=i.fields[this.opt.field.nodeLabel]?i.fields[this.opt.field.nodeLabel]:i.fields.title;var o=i.fields[this.opt.field.nodeIcon];if(o){var a=utils.getTiddler(o);if(a&&a.fields.text){var d=a.fields.type?a.fields.type:"image/svg+xml";var l=a.fields.text;s.shape="image";if(d==="image/svg+xml"){l=l.replace(/\r?\n|\r/g," ");if(l.indexOf("xmlns")===-1){l=l.replace(/<svg/,'<svg xmlns="http://www.w3.org/2000/svg"')}}s.image="data:"+d+";base64,"+window.btoa(l)}}if(i.fields.color){s.color=i.fields.color}if(typeof t==="object"){s=$tw.utils.extendDeepCopy(s,t)}s.id=i.fields[this.opt.field.nodeId];s.ref=i.fields.title;return s};Adapter.prototype.selectNeighbours=function(e,t){if(typeof t!=="object")t=utils.getEmptyMap();if(t.edges){var i=this.filterEdgesByEndpoints(t.edges,e,{outputType:"array",endpointsInSet:"=1"})}else{var i=this.selectEdgesByEndpoints(e,{outputType:"array",view:t.view,endpointsInSet:"=1"})}var e=utils.getLookupTable(e,"id");var r=utils.getEmptyMap();for(var s=0;s<i.length;s++){var o=e[i[s].from]?i[s].to:i[s].from;r[o]=true}return this.selectNodesByIds(r,t)};Adapter.prototype.selectNodesByIds=function(e,t){if(typeof t!=="object")t=utils.getEmptyMap();if(Array.isArray(e)){e=utils.getArrayValuesAsHashmapKeys(e)}else if(e instanceof vis.DataSet){e=utils.getLookupTable(e,"id")}var i=utils.getEmptyMap();var r=this.wiki.allTitles();var s=this.opt.field.nodeId;var o=t.addProperties;for(var a in e){for(var d=0;d<r.length;d++){var l=this.createNode(r[d],o);if(l&&e[l.id]){i[l.id]=l}}}if(t.view){this._restorePositions(i,t.view)}return utils.convert(i,t.outputType)};Adapter.prototype.selectNodeById=function(e,t){if(typeof t!=="object"){t=utils.getEmptyMap()}t.outputType="hashmap";var i=this.selectNodesByIds([e],t);return i[e]};Adapter.prototype.deleteNodesFromStore=function(e){if(!e)return;var t=this.opt.field.nodeId;var i=this.wiki.allTitles();var r=[];var e=utils.getLookupTable(e,"id");for(var s in e){for(var o=0;o<i.length;o++){var a=utils.getTiddlersWithProperty(t,s,{isIncludeDrafts:true,isReturnRef:true,tiddlers:i});r=r.concat(a)}}var d=this.wiki.getTiddlerList("$:/StoryList");if(d.length){d=d.filter(function(e){return r.indexOf(e)==-1});var l=this.wiki.getTiddler("$:/StoryList");this.wiki.addTiddler(new $tw.Tiddler(l,{list:d}))}utils.deleteTiddlers(r)};Adapter.prototype.deleteEdgeFromStore=function(e,t){if(!e)return;var i=e.label?e.label:this.opt.misc.unknownEdgeLabel;var t=new ViewAbstraction(t);var r=t.getEdgeStoreLocation()+"/"+i;var s=this.wiki.getTiddlerData(r,[]);this.logger("info",'Edge with label "'+i+'" will be deleted: '+e);var o=utils.keyOfItemWithProperty(s,"id",e.id);if(o!=null){s.splice(o,1);this.wiki.setTiddlerData(r,s);$tw.tiddlymap.edgeChanges.push({type:"delete",edge:e})}};Adapter.prototype.deleteEdgesFromStore=function(e,t){e=utils.convert(e,"array");for(var i=0;i<e.length;i++){this.deleteEdgeFromStore(e[i],t)}};Adapter.prototype.getView=function(e,t){return new ViewAbstraction(e,t)};Adapter.prototype.createView=function(e){if(typeof e!=="string"||e===""){e="My view"}var t=this.wiki.generateNewTitle(this.opt.path.views+"/"+e);return new ViewAbstraction(t,true)};Adapter.prototype._restorePositions=function(e,t){t=new ViewAbstraction(t);if(!t.exists())return;var i=t.getPositions();for(var r in e){if(utils.hasOwnProp(i,r)){e[r].x=i[r].x;e[r].y=i[r].y}}};Adapter.prototype.storePositions=function(e,t){t=new ViewAbstraction(t);t.setPositions(e)};Adapter.prototype.setupTiddler=function(e){var t=this.wiki.getTiddler(utils.getTiddlerReference(e));if(!t)return;var i=this.opt.field.nodeId;if(!t.fields[i]){var r=utils.getEmptyMap();r[i]=utils.genUUID();t=new $tw.Tiddler(t,r);$tw.wiki.addTiddler(t)}return t};Adapter.prototype.insertNode=function(e,t){if(typeof t!=="object")t=utils.getEmptyMap();if(typeof e!=="object"){e=utils.getEmptyMap()}if(!e.id){e.id=utils.genUUID()}var i=utils.getEmptyMap();var r=e.label?e.label:"New node";i.title=this.wiki.generateNewTitle(r);i[this.opt.field.nodeId]=e.id;e.label=i.title;e.ref=i.title;if(t.view){var s=new ViewAbstraction(t.view);s.addNodeToView(e)}this.wiki.addTiddler(new $tw.Tiddler(i,this.wiki.getModificationFields(),this.wiki.getCreationFields()));return e};exports.Adapter=Adapter;