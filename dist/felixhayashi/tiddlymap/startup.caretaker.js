/*\

title: $:/plugins/felixhayashi/tiddlymap/js/caretaker
type: application/javascript
module-type: startup

@module TiddlyMap
@preserve

\*/
(function(){"use strict";var e=require("$:/plugins/felixhayashi/tiddlymap/js/config/vis").config;var t=require("$:/plugins/felixhayashi/tiddlymap/js/utils").utils;var a=require("$:/plugins/felixhayashi/tiddlymap/js/Adapter").Adapter;var i=require("$:/plugins/felixhayashi/tiddlymap/js/DialogManager").DialogManager;var s=require("$:/plugins/felixhayashi/tiddlymap/js/CallbackManager").CallbackManager;var r=require("$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction").ViewAbstraction;var l=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType").EdgeType;var d=require("$:/plugins/felixhayashi/tiddlymap/js/NodeType").NodeType;var p=require("$:/plugins/felixhayashi/vis/vis.js");var o=function(a){var i=a;if(!i.path)i.path=t.getDataMap();i.path.pluginRoot="$:/plugins/felixhayashi/tiddlymap";i.path.edgeTypes="$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes";i.path.nodeTypes="$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes";i.path.listEdgeTypes="$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-list:";i.path.fieldEdgeTypes="$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-field:";i.path.views="$:/plugins/felixhayashi/tiddlymap/graph/views";i.path.options="$:/plugins/felixhayashi/tiddlymap/config";i.path.dialogs="$:/plugins/felixhayashi/tiddlymap/dialog";i.path.footers="$:/plugins/felixhayashi/tiddlymap/dialogFooter";i.path.tempRoot="$:/temp/tmap";i.path.localHolders="$:/temp/tmap/holders";if(!i.ref)i.ref=t.getDataMap();i.ref.defaultViewHolder="$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder";i.ref.graphBar="$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar";i.ref.sysConf="$:/plugins/felixhayashi/tiddlymap/config/sys";i.ref.sysUserConf="$:/plugins/felixhayashi/tiddlymap/config/sys/user";i.ref.visUserConf="$:/plugins/felixhayashi/tiddlymap/config/vis/user";i.ref.welcomeFlag="$:/plugins/felixhayashi/tiddlymap/flag/welcome";i.ref.focusButton="$:/plugins/felixhayashi/tiddlymap/misc/focusButton";i.ref.sysMeta="$:/plugins/felixhayashi/tiddlymap/misc/meta";i.ref.sidebarBreakpoint="$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint";if(!i.config)i.config=t.getDataMap();i.config.sys=t.merge($tw.wiki.getTiddlerData(i.ref.sysConf,{}),t.unflatten($tw.wiki.getTiddlerData(i.ref.sysUserConf,{})));i.config.vis=t.merge({},e,$tw.wiki.getTiddlerData(i.ref.visUserConf,{}));if(!i.field)i.field=t.getDataMap();$tw.utils.extend(i.field,i.config.sys.field);if(!i.misc)i.misc=t.getDataMap();i.misc.unknownEdgeLabel="tmap:undefined";i.misc.cssPrefix="tmap-";i.misc.sysEdgeTypeNS="tmap";i.misc.liveViewLabel="Live View";i.misc.defaultViewLabel="Default";if(!i.filter)i.filter=t.getDataMap();i.filter.nodeTypes="[prefix["+i.path.nodeTypes+"]]";i.filter.edgeTypes="[prefix["+i.path.edgeTypes+"]]";i.filter.listEdgeTypes="[prefix["+i.path.listEdgeTypes+"]]";i.filter.fieldEdgeTypes="[prefix["+i.path.fieldEdgeTypes+"]]";i.filter.views="["+i.field.viewMarker+"[true]]";i.filter.defaultEdgeFilter=i.filter.edgeTypes+"-[suffix[tw-body:link]]"+"-[suffix[tw-list:tags]]";+"-[suffix[tw-list:list]]";if(!i.selector)i.selector=t.getDataMap();var s="[all[tiddlers+shadows]!has[draft.of]]";i.selector.allEdgeTypes=s+" +"+i.filter.edgeTypes;i.selector.allEdgeTypesByLabel=i.selector.allEdgeTypes+" +[removeprefix["+i.path.edgeTypes+"/]]";i.selector.allNodeTypes=s+" +"+i.filter.nodeTypes;i.selector.allNodeTypesByLabel=i.selector.allNodeTypes+" +[removeprefix["+i.path.nodeTypes+"/]]";i.selector.allViews=s+" +"+i.filter.views;i.selector.allViewsByLabel=i.selector.allViews+"+[removeprefix["+i.path.views+"/]]";i.selector.allPotentialNodes="[all[tiddlers]!is[system]!has[draft.of]]";i.selector.allListEdgeStores=s+" +"+i.filter.listEdgeTypes+" +[removeprefix["+i.path.listEdgeTypes+"]]";i.selector.allFieldEdgeStores=s+" +"+i.filter.fieldEdgeTypes+" +[removeprefix["+i.path.fieldEdgeTypes+"]]"};var n=function(e){$tw.tmap.start("Attaching Indeces");e.indeces=e.indeces||{};var t=$tw.wiki.allTitles();f(e.indeces,t);g(e.indeces,t);$tw.tmap.stop("Attaching Indeces")};var f=function(e,a){e=e||$tw.tmap.indeces;a=a||$tw.wiki.allTitles();var i=$tw.tmap.opt.field.nodeId;var s=e.tById={};var r=e.idByT={};for(var l=a.length;l--;){var d=a[l];var p=$tw.wiki.getTiddler(d);if(t.isSystemOrDraft(p))continue;var o=p.fields[i];if(!o){o=t.genUUID();t.setField(p,i,o)}s[o]=d;r[d]=o}};var g=function(e,a){e=e||$tw.tmap.indeces;a=a||$tw.wiki.allTitles();var i=$tw.tmap.opt.path.nodeTypes;var s=e.glNTy=[];var r=e.loNTy=[];for(var l=a.length;l--;){if(t.startsWith(a[l],i)){var p=new d(a[l]);(p.data.view?r:s).push(p)}}e.glLoNTy=s.concat(r);e.loGlNTy=r.concat(s)};var y=function(e){var a=e;var i=function(){};if(t.isTrue($tw.tmap.opt.config.sys.debug,false)&&console){a.logger=function(){if(arguments.length<2)return;var e=Array.prototype.slice.call(arguments);var t=e.shift(e);var a=console.hasOwnProperty(t)?t:"debug";console[a].apply(console,e)};a.start=function(e){console.time("timer: "+e)};a.stop=function(e){console.timeEnd("timer: "+e)}}else{a.logger=a.start=a.stop=i}a.notify=t.isTrue($tw.tmap.opt.config.sys.notifications)?t.notify:i};var m=function(){for(var e=$tw.tmap.registry.length;e--;){var t=$tw.tmap.registry[e];if(t.isZombieWidget()){$tw.tmap.logger("warn","A graph has been removed.");t.destruct();$tw.tmap.registry.splice(e,1)}}};var c=function(e){var a=$tw.tmap.opt.field.nodeId;var i=e.fields[a];if(!i)return;var s=$tw.tmap.opt;var r=t.getTiddlersWithField(a,i,{limit:2});delete r[e.fields.title];var l=Object.keys(r)[0];if(l){var d={param:{changedTiddler:e.fields.title,existingTiddler:l,idField:a,id:i}};$tw.tmap.dialogManager.open("dublicateIdInfo",d)}if(l){t.setField(e,"tmap.edges",undefined);$tw.tmap.adapter.assignId(e,true)}};var w=function(e){if(!e)e=$tw.tmap;if(!e.opt)e.opt=t.getDataMap();o(e.opt);y(e,e.opt);$tw.tmap.logger("warn","Rebuilt globals")};var u=function(e){if(e["$:/HistoryList"]){var a=t.getField("$:/HistoryList","current-tiddler")}else if(e["$:/temp/focussedTiddler"]){var a=t.getField("$:/temp/focussedTiddler","text")}if(a!=null){t.setField("$:/temp/tmap/currentTiddler","text",a)}};var h=function(e){if(t.isTrue($tw.tmap.opt.config.sys.debug,false)){for(var a in e){if(e[a].deleted){$tw.tmap.logger("warn","Tiddler deleted:",a)}else{$tw.tmap.logger("warn","Tiddler modified:",a,t.getTiddler(a))}}}};var $=function(e){var a=$tw.tmap.opt.path.nodeTypes;var i=$tw.tmap.opt.path.options;var s=$tw.tmap.opt.field.nodeId;var r=0;$tw.wiki.addEventListener("change",function(l){$tw.tmap.start("Caretaker handling changes");$tw.tmap.logger("warn","=== Refresh "+r++ +" ===");h(l);e.handleChanges(l);var d=false;var p=false;for(var o in l){if(t.isSystemOrDraft(o)){if(t.startsWith(o,a)&&!d){g();d=true}if(t.startsWith(o,i)&&!p){w();p=true}continue}var n=t.getTiddler(o);if(n){c(n);$tw.tmap.adapter.assignId(n)}else{var f=$tw.tmap.indeces.idByT[o];if(!f){$tw.tmap.logger("warn","Ignoring Tiddler",o,"without id; Assuming draft");continue}var y=t.getTiddlerWithField(s,f);if(y){$tw.tmap.logger("warn","Tiddler",o,"renamed into",y)}else{$tw.tmap.logger("warn","Tiddler",o,"removed");$tw.tmap.adapter.deleteNode(f)}}}u(l);$tw.tmap.stop("Caretaker handling changes")})};var v=function(){var e=$tw.tmap.opt.config.sys.defaultView;if(e){t.setField($tw.tmap.opt.ref.defaultViewHolder,"text",e)}};var T=function(){if(t.tiddlerExists($tw.tmap.opt.ref.sysMeta))return;$tw.tmap.logger("warn","Creating meta file");var e=$tw.wiki.getTiddler($tw.tmap.opt.path.pluginRoot);$tw.wiki.setTiddlerData($tw.tmap.opt.ref.sysMeta,{originalVersion:e.fields.version,dataStructureState:"0.6.9",showWelcomeMessage:true})};exports.name="tmap.caretaker";exports.platforms=["browser"];exports.after=["startup"];exports.before=["rootwidget"];exports.synchronous=true;exports.startup=function(){$tw.tmap=t.getDataMap();$tw.tmap.utils=t;$tw.tmap.keycharm=p.keycharm;$tw.tmap.obj={NodeType:d,EdgeType:l,ViewAbstraction:r};$tw.tmap.registry=[];window.setInterval(m,5e3);w($tw.tmap);n($tw.tmap);v();$tw.tmap.adapter=new a;T();$tw.tmap.callbackManager=new s;$tw.tmap.dialogManager=new i($tw.tmap.callbackManager);$($tw.tmap.callbackManager);$tw.tmap.logger("warn","TiddlyMap's caretaker successfully started")}})();