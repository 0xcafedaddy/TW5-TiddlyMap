/*\

title: $:/plugins/felixhayashi/tiddlymap/js/caretaker
type: application/javascript
module-type: startup

@module TiddlyMap
@preserve

\*/
(function(){"use strict";var e=require("$:/plugins/felixhayashi/tiddlymap/js/config/vis").config;var t=require("$:/plugins/felixhayashi/tiddlymap/js/utils").utils;var i=require("$:/plugins/felixhayashi/tiddlymap/js/fixer").fixer;var a=require("$:/plugins/felixhayashi/tiddlymap/js/Adapter").Adapter;var r=require("$:/plugins/felixhayashi/tiddlymap/js/DialogManager").DialogManager;var s=require("$:/plugins/felixhayashi/tiddlymap/js/CallbackManager").CallbackManager;var l=require("$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction").ViewAbstraction;var d=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType").EdgeType;var n=require("$:/plugins/felixhayashi/tiddlymap/js/NodeType").NodeType;var p=require("$:/plugins/felixhayashi/vis/vis.js");var o=function(e){if(e.path)return;var t=e;t.path={pluginRoot:"$:/plugins/felixhayashi/tiddlymap",edgeTypes:"$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes",nodeTypes:"$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes",listEdgeTypes:"$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-list:",fieldEdgeTypes:"$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-field:",views:"$:/plugins/felixhayashi/tiddlymap/graph/views",options:"$:/plugins/felixhayashi/tiddlymap/config",dialogs:"$:/plugins/felixhayashi/tiddlymap/dialog",footers:"$:/plugins/felixhayashi/tiddlymap/dialogFooter",tempRoot:"$:/temp/tmap",localHolders:"$:/temp/tmap/holders"};var i=t.path;t.ref={defaultViewHolder:"$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder",graphBar:"$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar",sysUserConf:"$:/plugins/felixhayashi/tiddlymap/config/sys/user",visUserConf:"$:/plugins/felixhayashi/tiddlymap/config/vis/user",welcomeFlag:"$:/plugins/felixhayashi/tiddlymap/flag/welcome",focusButton:"$:/plugins/felixhayashi/tiddlymap/misc/focusButton",sysMeta:"$:/plugins/felixhayashi/tiddlymap/misc/meta",liveTab:"$:/plugins/felixhayashi/tiddlymap/hook/liveTab",sidebarBreakpoint:"$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint"};t.misc={unknownEdgeLabel:"tmap:undefined",liveViewLabel:"Live View",defaultViewLabel:"Default"};t.config={sys:{field:{nodeLabel:"caption",nodeIcon:"icon",nodeInfo:"description",viewMarker:"isview"},liveTab:{fallbackView:t.misc.liveViewLabel},suppressedDialogs:{},edgeClickBehaviour:"manager",debug:"false",notifications:"true",editNodeOnCreate:"false",singleClickMode:"false",editorMenuBar:{showNeighScopeButton:"true",showScreenshotButton:"true"}}};t.filter={nodeTypes:"[prefix["+t.path.nodeTypes+"]]",edgeTypes:"[prefix["+t.path.edgeTypes+"]]",listEdgeTypes:"[prefix["+t.path.listEdgeTypes+"]]",fieldEdgeTypes:"[prefix["+t.path.fieldEdgeTypes+"]]",views:"["+t.config.sys.field.viewMarker+"[true]]"};t.filter.defaultEdgeFilter=t.filter.edgeTypes+"-[suffix[tw-body:link]]"+"-[suffix[tw-list:tags]]"+"-[suffix[tw-list:list]]";var a=t.selector={};var r="[all[tiddlers+shadows]!has[draft.of]]";a.allEdgeTypes=r+" +"+t.filter.edgeTypes;a.allEdgeTypesByLabel=a.allEdgeTypes+" +[removeprefix["+i.edgeTypes+"/]]";a.allNodeTypes=r+" +"+t.filter.nodeTypes;a.allNodeTypesByLabel=a.allNodeTypes+" +[removeprefix["+i.nodeTypes+"/]]";a.allViews=r+" +"+t.filter.views;a.allViewsByLabel=a.allViews+"+[removeprefix["+i.views+"/]]";a.allPotentialNodes="[all[tiddlers]!is[system]!has[draft.of]]";a.allListEdgeStores=r+" +"+t.filter.listEdgeTypes+" +[removeprefix["+i.listEdgeTypes+"]]";a.allFieldEdgeStores=r+" +"+t.filter.fieldEdgeTypes+" +[removeprefix["+i.fieldEdgeTypes+"]]"};var f=function(i){var a=i;o(a);if(!a.config)a.config=t.getDataMap();a.config.sys=t.merge(a.config.sys,t.unflatten($tw.wiki.getTiddlerData(a.ref.sysUserConf)));a.config.vis=t.merge({},e,t.parseFieldData(a.ref.visUserConf));if(!a.field)a.field=t.getDataMap();$tw.utils.extend(a.field,a.config.sys.field)};var g=function(e){$tw.tmap.start("Attaching Indeces");if(!e.indeces){e.indeces={};var t=$tw.tmap.opt.path.pluginRoot;e.indeces.tmapTiddlers=$tw.wiki.getPluginInfo(t).tiddlers}var i=$tw.wiki.allTitles();u(e.indeces,i);m(e.indeces,i);$tw.tmap.stop("Attaching Indeces")};var u=function(e,a){e=e||$tw.tmap.indeces;a=a||$tw.wiki.allTitles();i.fixId();var r=e.tById={};var s=e.idByT={};for(var l=a.length;l--;){var d=a[l];var n=$tw.wiki.getTiddler(d);if(t.isSystemOrDraft(n))continue;var p=n.fields["tmap.id"];if(!p){p=t.genUUID();t.setField(n,"tmap.id",p)}r[p]=d;s[d]=p}};var m=function(e,i){e=e||$tw.tmap.indeces;i=i||$tw.wiki.allTitles();var a=$tw.tmap.opt.path.nodeTypes;var r=e.glNTy=[];$tw.wiki.eachTiddlerPlusShadows(function(e,i){if(t.startsWith(i,a)){r.push(new n(i))}});r.sort(function(e,t){return e.priority-t.priority})};var y=function(e){};var w=function(e){var i=e;var a=function(){};if(t.isTrue($tw.tmap.opt.config.sys.debug,false)&&console){i.logger=function(){if(arguments.length<2)return;var e=Array.prototype.slice.call(arguments);var t=e.shift(e);var i=console.hasOwnProperty(t)?t:"debug";console[i].apply(console,e)};i.start=function(e){console.time("[timer] "+e)};i.stop=function(e){console.timeEnd("[timer] "+e)}}else{i.logger=i.start=i.stop=a}i.notify=t.isTrue($tw.tmap.opt.config.sys.notifications)?t.notify:a};var c=function(){for(var e=$tw.tmap.registry.length;e--;){var t=$tw.tmap.registry[e];if(t.isZombieWidget()){$tw.tmap.logger("warn","A graph has been removed.");t.destruct();$tw.tmap.registry.splice(e,1)}}};var h=function(e){var i=e.fields["tmap.id"];if(!i)return;var a=$tw.tmap.opt;var r=t.getTiddlersWithField("tmap.id",i,{limit:2});delete r[e.fields.title];var s=Object.keys(r)[0];if(s){var l={param:{changedTiddler:e.fields.title,existingTiddler:s,id:i}};$tw.tmap.dialogManager.open("dublicateIdInfo",l)}if(s){t.setField(e,"tmap.edges",undefined);$tw.tmap.adapter.assignId(e,true)}};var v=function(e){if(!e)e=$tw.tmap;if(!e.opt)e.opt=t.getDataMap();f(e.opt);w(e,e.opt);$tw.tmap.logger("warn","Rebuilt globals")};var $=null;var T=function(e){if(e["$:/HistoryList"]){var i=t.getField("$:/HistoryList","current-tiddler")}else if(e["$:/temp/focussedTiddler"]){var i=t.getField("$:/temp/focussedTiddler","text")}if(i!=null&&$!==i){$=i;t.setField("$:/temp/tmap/currentTiddler","text",i)}};var x=function(e){if(t.isTrue($tw.tmap.opt.config.sys.debug,false)){for(var i in e){if(e[i].deleted){$tw.tmap.logger("warn","Tiddler deleted:",i)}else{$tw.tmap.logger("warn","Tiddler modified:",i,t.getTiddler(i))}}}};var b=["$:/temp/tiddlymap/quickConnectButton","$:/temp/tmap/state/focus"];var k=function(){window.addEventListener("click",function(e){for(var i=b.length;i--;){if(t.getText(b[i]))break}if(i===-1)return;if(!$tw.utils.hasClass(e.target,"tc-drop-down")&&!t.getAncestorWithClass(e.target,"tc-drop-down")){for(var i=b.length;i--;){t.setText(b[i],"")}}},false)};var E=function(e){var i=$tw.tmap.opt.path.nodeTypes;var a=$tw.tmap.opt.path.options;var r=0;$tw.wiki.addEventListener("change",function(s){$tw.tmap.start("Caretaker handling changes");$tw.tmap.logger("warn","=== Refresh "+r++ +" ===");x(s);e.handleChanges(s);var l=false;var d=false;for(var n in s){if(t.isSystemOrDraft(n)){if(t.startsWith(n,i)&&!l){m();l=true}if(t.startsWith(n,a)&&!d){v();d=true}continue}var p=t.getTiddler(n);if(p){h(p);$tw.tmap.adapter.assignId(p)}else{var o=$tw.tmap.indeces.idByT[n];if(!o){$tw.tmap.logger("warn","Ignoring Tiddler",n,"without id; Assuming draft");continue}var f=t.getTiddlerWithField("tmap.id",o);if(f){$tw.tmap.logger("warn","Tiddler",n,"renamed into",f)}else{$tw.tmap.logger("warn","Tiddler",n,"removed");$tw.tmap.adapter.deleteNode(o)}}}T(s);$tw.tmap.stop("Caretaker handling changes")})};var M=function(){t.deleteByPrefix("$:/temp/felixhayashi");t.deleteByPrefix("$:/temp/tiddlymap");t.deleteByPrefix("$:/temp/tmap")};var B=function(){var e=$tw.tmap.opt.config.sys.defaultView;if(e){t.setField($tw.tmap.opt.ref.defaultViewHolder,"text",e)}};var C=function(){if(t.tiddlerExists($tw.tmap.opt.ref.sysMeta))return;$tw.tmap.logger("warn","Creating meta file");var e=$tw.wiki.getTiddler($tw.tmap.opt.path.pluginRoot);$tw.wiki.setTiddlerData($tw.tmap.opt.ref.sysMeta,{originalVersion:e.fields.version,dataStructureState:"0.6.9",showWelcomeMessage:true})};exports.name="tmap.caretaker";exports.platforms=["browser"];exports.after=["startup"];exports.before=["rootwidget"];exports.synchronous=true;exports.startup=function(){$tw.tmap=t.getDataMap();$tw.tmap.utils=t;$tw.tmap.keycharm=p.keycharm;$tw.tmap.NodeType=n;$tw.tmap.EdgeType=d;$tw.tmap.ViewAbstraction=l;v($tw.tmap);C();M();g($tw.tmap);B();$tw.tmap.adapter=new a;i.fix();$tw.tmap.callbackManager=new s;$tw.tmap.dialogManager=new r($tw.tmap.callbackManager);$tw.tmap.registry=[];window.setInterval(c,5e3);E($tw.tmap.callbackManager);k();$tw.tmap.logger("warn","TiddlyMap's caretaker successfully started")}})();