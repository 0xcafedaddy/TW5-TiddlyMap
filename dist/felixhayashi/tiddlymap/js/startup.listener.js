/*\

title: $:/plugins/felixhayashi/tiddlymap/js/startup/listener
type: application/javascript
module-type: startup

@preserve

\*/
"use strict";exports.name="tmap.listener";exports.platforms=["browser"];exports.after=["rootwidget","tmap.caretaker"];exports.before=["story"];exports.synchronous=true;exports.startup=function(){new GlobalListener};var NodeType=require("$:/plugins/felixhayashi/tiddlymap/js/NodeType");var EdgeType=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType");var utils=require("$:/plugins/felixhayashi/tiddlymap/js/utils");var visDefConf=require("$:/plugins/felixhayashi/tiddlymap/js/config/vis");function GlobalListener(){this.wiki=$tw.wiki;utils.addTWlisteners({"tmap:tm-remove-edge":this.handleRemoveEdge,"tmap:tm-load-type-form":this.handleLoadTypeForm,"tmap:tm-save-type-form":this.handleSaveTypeForm,"tmap:tm-create-type":this.handleCreateType,"tmap:tm-create-edge":this.handleCreateEdge,"tmap:tm-suppress-dialog":this.handleSuppressDialog,"tmap:tm-generate-widget":this.handleGenerateWidget,"tmap:tm-download-graph":this.handleDownloadGraph,"tmap:tm-configure-system":this.handleConfigureSystem,"tmap:tm-manage-edge-types":this.handleOpenTypeManager,"tmap:tm-manage-node-types":this.handleOpenTypeManager,"tmap:tm-cancel-dialog":this.handleCancelDialog,"tmap:tm-clear-tiddler":this.handleClearTiddler,"tmap:tm-merge-tiddlers":this.handleMixTiddlers,"tmap:tm-confirm-dialog":this.handleConfirmDialog},$tw.rootWidget,this)}GlobalListener.prototype.handleCancelDialog=function(e){utils.setField(e.param,"text","")};GlobalListener.prototype.handleClearTiddler=function(e){var t=e.paramObject;if(!t||!t.title)return;var a=utils.getTiddler(t.title);var i=a?a.fields:{};var r=t.keep?t.keep.split():[];var d={title:t.title,text:""};for(var l=r.length;l--;){var s=r[l];d[s]=i[s]}$tw.wiki.deleteTiddler(t.title);$tw.wiki.addTiddler(new $tw.Tiddler(d))};GlobalListener.prototype.handleMixTiddlers=function(e){var t=e.paramObject;if(!t||!t.tiddlers)return;var a=$tw.utils.parseStringArray(t.tiddlers);var i=utils.getMergedTiddlers(a,t.output);$tw.wiki.addTiddler(i)};GlobalListener.prototype.handleConfirmDialog=function(e){utils.setField(e.param,"text","1")};GlobalListener.prototype.handleSuppressDialog=function(e){if(utils.isTrue(e.paramObject.suppress,false)){utils.setEntry($tm.ref.sysUserConf,"suppressedDialogs."+e.paramObject.dialog,true)}};GlobalListener.prototype.handleDownloadGraph=function(e){var t=$tm.adapter.getGraph({view:e.paramObject.view});t.nodes=utils.convert(t.nodes,"array");t.edges=utils.convert(t.edges,"array");var a="$:/temp/tmap/export";utils.setField(a,"text",JSON.stringify(t,null,2));$tw.rootWidget.dispatchEvent({type:"tm-download-file",param:a,paramObject:{filename:e.paramObject.view+".json"}})};GlobalListener.prototype.handleConfigureSystem=function(){var e=$tm.adapter.getAllPotentialNodes();var t=$tm.adapter.getEdgesForSet(e);var a=$tw.wiki.getTiddler($tm.path.pluginRoot).fields;var i=$tw.wiki.getTiddlerData($tm.ref.sysMeta);var r=utils.getTiddler($tm.ref.liveTab).hasTag("$:/tags/SideBar");var d={numberOfNodes:""+e.length,numberOfEdges:""+Object.keys(t).length,pluginVersion:"v"+a.version,dataStructureVersion:"v"+i.dataStructureState,dialog:{preselects:{liveTab:""+r,"vis-inherited":JSON.stringify(visDefConf),"config.vis":utils.getText($tm.ref.visUserConf),"config.sys":$tm.config.sys}}};var l="globalConfig";$tm.dialogManager.open(l,d,function(e,t){if(!e)return;var a=utils.getPropertiesByPrefix(t.fields,"config.sys.",true);$tw.wiki.setTiddlerData($tm.ref.sysUserConf,a);if(utils.isTrue(t.fields.liveTab,false)){utils.setField($tm.ref.liveTab,"tags","$:/tags/SideBar")}else{$tw.wiki.deleteTiddler($tm.ref.liveTab)}utils.setField($tm.ref.visUserConf,"text",t.fields["config.vis"])}.bind(this))};GlobalListener.prototype.handleGenerateWidget=function(e){if(!e.paramObject)e.paramObject={};var t={dialog:{preselects:{view:e.paramObject.view||$tm.misc.defaultViewLabel}}};$tm.dialogManager.open("widgetCodeGenerator",t)};GlobalListener.prototype.handleRemoveEdge=function(e){$tm.adapter.deleteEdge(e.paramObject)};GlobalListener.prototype.handleCreateEdge=function(e){var t=e.paramObject.from;var a=e.paramObject.to;var i=e.paramObject.force;if(!t||!a)return;if(utils.tiddlerExists(t)&&utils.tiddlerExists(a)||i){utils.addTiddler(a);utils.addTiddler(t);var r={from:$tm.adapter.makeNode(t).id,to:$tm.adapter.makeNode(a).id,type:e.paramObject.label,id:e.paramObject.id};$tm.adapter.insertEdge(r);$tm.notify("Edge inserted")}};GlobalListener.prototype.handleOpenTypeManager=function(e){if(!e.paramObject)e.paramObject={};var t=e.type.match(/tmap:tm-(.*)/)[1];if(t==="manage-edge-types"){var a="Edge-Type Manager";var i=$tm.selector.allEdgeTypes;var r=$tm.path.edgeTypes}else{var a="Node-Type Manager";var i=$tm.selector.allNodeTypes;var r=$tm.path.nodeTypes}var d={mode:t,topic:a,searchSelector:i,typeRootPath:r};var l=$tm.dialogManager.open("MapElementTypeManager",d);if(e.paramObject.type){this.handleLoadTypeForm({paramObject:{mode:t,id:e.paramObject.type,output:l.fields["output"]}})}};GlobalListener.prototype.handleLoadTypeForm=function(e){var t=e.paramObject.output;var a=e.paramObject.mode==="manage-edge-types"?new EdgeType(e.paramObject.id):new NodeType(e.paramObject.id);a.save(t);if(e.paramObject.mode==="manage-edge-types"){var i=$tm.adapter.selectEdgesByType(a);var r=Object.keys(i).length;utils.setField(t,"temp.usageCount",r)}$tw.wiki.addTiddler(new $tw.Tiddler(utils.getTiddler(t),{typeTRef:a.fullPath,"temp.idImmutable":a.isShipped?"true":"","temp.newId":a.id,"vis-inherited":JSON.stringify($tm.config.vis)}));utils.deleteByPrefix("$:/state/tabs/MapElementTypeManager")};GlobalListener.prototype.handleSaveTypeForm=function(e){var t=utils.getTiddler(e.paramObject.output);if(!t)return;var a=e.paramObject.mode;var i=a==="manage-edge-types"?new EdgeType(t.fields.id):new NodeType(t.fields.id);if(utils.isTrue(t.fields["temp.deleteType"],false)){this.deleteType(a,i,t)}else{this.saveType(a,i,t)}};GlobalListener.prototype.deleteType=function(e,t,a){$tm.logger("debug","Deleting type",t);if(e==="manage-edge-types"){$tm.adapter._processEdgesWithType(t,{action:"delete"})}else{$tm.adapter.removeNodeType(t)}this.wiki.addTiddler(new $tw.Tiddler({title:utils.getTiddlerRef(a)}));$tm.notify("Deleted type")};GlobalListener.prototype.saveType=function(e,t,a){var i=utils.getTiddler(a);t.loadFromTiddler(i);t.save();var r=i.fields["temp.newId"];if(r&&r!==i.fields["id"]){if(e==="manage-edge-types"){$tm.adapter._processEdgesWithType(t,{action:"rename",newName:r})}else{var d=new NodeType(r);d.load(t);d.save();$tw.wiki.deleteTiddler(t.fullPath)}utils.setField(i,"id",r)}$tm.notify("Saved type data")};GlobalListener.prototype.handleCreateType=function(e){var t=e.paramObject.id||"New type";var a=e.paramObject.mode==="manage-edge-types"?new EdgeType(t):new NodeType(t);a.save();this.handleLoadTypeForm({paramObject:{id:a.id,mode:e.paramObject.mode,output:e.paramObject.output}})};GlobalListener.prototype.getTypeFromEvent=function(e){return e.paramObject.mode==="manage-edge-types"?new EdgeType(e.paramObject.id):new NodeType(e.paramObject.id)};