"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol==="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}return function(t,i,r){if(i)e(t.prototype,i);if(r)e(t,r);return t}}();// @preserve
/*\

title: $:/plugins/felixhayashi/tiddlymap/js/Adapter
type: application/javascript
module-type: library

@preserve

\*/
var _ViewAbstraction=require("$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction");var _ViewAbstraction2=_interopRequireDefault(_ViewAbstraction);var _EdgeType=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType");var _EdgeType2=_interopRequireDefault(_EdgeType);var _NodeType=require("$:/plugins/felixhayashi/tiddlymap/js/NodeType");var _NodeType2=_interopRequireDefault(_NodeType);var _utils=require("$:/plugins/felixhayashi/tiddlymap/js/utils");var _utils2=_interopRequireDefault(_utils);var _Edge=require("$:/plugins/felixhayashi/tiddlymap/js/Edge");var _Edge2=_interopRequireDefault(_Edge);var _vis=require("$:/plugins/felixhayashi/vis/vis.js");var _vis2=_interopRequireDefault(_vis);var _environment=require("$:/plugins/felixhayashi/tiddlymap/js/lib/environment");var env=_interopRequireWildcard(_environment);var _contrastcolour=require("$:/core/modules/macros/contrastcolour.js");function _interopRequireWildcard(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var i in e){if(Object.prototype.hasOwnProperty.call(e,i))t[i]=e[i]}}t.default=e;return t}}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperty(e,t,i){if(t in e){Object.defineProperty(e,t,{value:i,enumerable:true,configurable:true,writable:true})}else{e[t]=i}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}var Adapter=function(){function e(t,i){_classCallCheck(this,e);this.getTiddlerById=t.getTiddlerById.bind(t);this.getId=t.getIdByTiddler.bind(t);this.assignId=t.assignId.bind(t);this.edgeTypeSubscriberRegistry=i;this.indeces=$tm.indeces;this.wiki=$tw.wiki;this.visShapesWithTextInside=_utils2.default.getLookupTable(["ellipse","circle","database","box","text"])}_createClass(e,[{key:"deleteEdge",value:function e(t){return this._processEdge(t,"delete")}},{key:"insertEdge",value:function e(t){return this._processEdge(t,"insert")}},{key:"deleteEdges",value:function e(t){t=_utils2.default.convert(t,"array");for(var i=t.length;i--;){this.deleteEdge(t[i])}}},{key:"_processEdge",value:function e(t,i){$tm.logger("debug","Edge",i,t);var r=this.getTiddlerById(t.from);if(!r||!_utils2.default.tiddlerExists(r)){return}var a=_utils2.default.getTiddler(r);var s=this.indeces.allETy[t.type]||new _EdgeType2.default(t.type);var l=this.edgeTypeSubscriberRegistry.getAllForType(s);var n=i+"Edge";for(var o=l.length;o--;){l[o][n](a,t,s)}if(i==="insert"&&!s.exists()){s.save()}return t}},{key:"getAdjacencyList",value:function e(t){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};$tm.start("Creating adjacency list");if(!i.edges){var r=_utils2.default.getMatches(env.selector.allPotentialNodes);i.edges=this.getEdgesForSet(r,i.toWL,i.typeWL)}var a=_utils2.default.groupByProperty(i.edges,t||"to");$tm.stop("Creating adjacency list");return a}},{key:"getNeighbours",value:function e(t){var i=this;var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};$tm.start("Get neighbours");var a=r.addProperties,s=r.toWL,l=r.typeWL,n=r.steps;var o=this.indeces.allETy;var d=_utils2.default.getArrayValuesAsHashmapKeys(t);var u=new _ViewAbstraction2.default(r.view);var f=_utils2.default.makeHashMap();var g=_utils2.default.makeHashMap();var c=parseInt(n)>0?n:1;var v=r.direction||u.exists()&&u.getConfig("neighbourhood_directions");var y=!v||v==="both";var h=y||v==="in";var p=y||v==="out";var _=this.getAdjacencyList("to",r);var b=function e(t,r,s){f[t.id]=t;var l=i.getTiddlerById(t[r]);if(!d[l]){d[l]=true;var n=i.makeNode(l,a);if(n){g[n.id]=n;s.push(l)}}};var m=void 0;for(m=0;m<c&&t.length;m++){var T=[];for(var w=t.length;w--;){if(_utils2.default.isSystemOrDraft(t[w])){continue}var k=this.getEdges(t[w],s,l);for(var E in k){var N=o[k[E].type];if(y||p&&N.toArrow||h&&N.invertedArrow){b(k[E],"to",T)}}var A=_[this.getId(t[w])];if(!A){continue}for(var x=A.length;x--;){var I=o[A[x].type];if(y||h&&I.toArrow||p&&I.invertedArrow){b(A[x],"from",T)}}}t=T}var S={nodes:g,edges:f};$tm.logger("debug","Retrieved neighbourhood",S,"steps",m);$tm.stop("Get neighbours");return S}},{key:"getGraph",value:function e(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},i=t.view,r=t.filter,a=t.edgeTypeWL,s=t.neighbourhoodScope;$tm.start("Assembling Graph");i=new _ViewAbstraction2.default(i);var l=_utils2.default.getMatches(r||i.exists()&&i.getNodeFilter("compiled"));var n=parseInt(s||i.exists()&&i.getConfig("neighbourhood_scope"));var o=a||i.exists()&&i.getEdgeTypeFilter("whitelist");var d=_utils2.default.getArrayValuesAsHashmapKeys(l);var u={edges:this.getEdgesForSet(l,d,o),nodes:this.selectNodesByReferences(l,{view:i,outputType:"hashmap"})};if(n){var f=this.getNeighbours(l,{steps:n,view:i,typeWL:o,addProperties:{group:"tmap:neighbour"}});Object.assign(u.nodes,f.nodes);Object.assign(u.edges,f.edges);if(i.exists()&&i.isEnabled("show_inter_neighbour_edges")){var g=this.getTiddlersByIds(f.nodes);var c=_utils2.default.getArrayValuesAsHashmapKeys(g);Object.assign(u.edges,this.getEdgesForSet(g,c))}}removeObsoleteViewData(u.nodes,i);this.attachStylesToNodes(u.nodes,i);$tm.stop("Assembling Graph");$tm.logger("debug","Assembled graph:",u);return u}},{key:"getEdges",value:function e(t,i,r){var a=_utils2.default.getTiddler(t);if(!a||_utils2.default.isSystemOrDraft(a)){return}var s=this.indeces.allETy;var l=_utils2.default.makeHashMap();var n=this.edgeTypeSubscriberRegistry.getAll();for(var o=0,d=n.length;o<d;o++){Object.assign(l,n[o].loadEdges(a,i,r))}for(var u in l){var f=l[u];if(!f.from||!f.to){continue}var g=s[f.type]||new _EdgeType2.default(f.type);addStyleToEdge(l[u],g);l[u]=f}return l}},{key:"getEdgesForSet",value:function e(t,i,r){var a=_utils2.default.makeHashMap();for(var s=t.length;s--;){Object.assign(a,this.getEdges(t[s],i,r))}return a}},{key:"selectEdgesByType",value:function e(t){var i=_utils2.default.makeHashMap(_defineProperty({},new _EdgeType2.default(t).id,true));return this.getEdgesForSet(this.getAllPotentialNodes(),null,i)}},{key:"getAllPotentialNodes",value:function e(){return _utils2.default.getMatches($tm.selector.allPotentialNodes)}},{key:"_processEdgesWithType",value:function e(t,i){var r=i.action,a=i.newName;t=new _EdgeType2.default(t);$tm.logger("debug","Processing edges",t,r);var s=this.selectEdgesByType(t);if(r==="rename"){var l=new _EdgeType2.default(a);l.load(t);l.save()}for(var n in s){this._processEdge(s[n],"delete");if(r==="rename"){s[n].type=a;this._processEdge(s[n],"insert")}}this.wiki.deleteTiddler(t.fullPath)}},{key:"selectNodesByReferences",value:function e(t){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},r=i.addProperties,a=i.outputType;var s=_utils2.default.makeHashMap();var l=Object.keys(t);for(var n=l.length;n--;){var o=this.makeNode(t[l[n]],r);if(o){s[o.id]=o}}return _utils2.default.convert(s,a)}},{key:"selectNodesByIds",value:function e(t,i){var r=this.getTiddlersByIds(t);return this.selectNodesByReferences(r,i)}},{key:"selectNodeById",value:function e(t,i){i=Object.assign({},i,{outputType:"hashmap"});var r=this.selectNodesByIds([t],i);return r[t]}},{key:"removeNodeType",value:function e(t){t=new _NodeType2.default(t);this.wiki.deleteTiddler(t.fullPath)}},{key:"makeNode",value:function e(t,i){var r=_utils2.default.getTiddler(t);if(!r||_utils2.default.isSystemOrDraft(r))return;var a=_utils2.default.merge({},i);a.id=this.assignId(r);var s=r.fields[$tm.field.nodeLabel];a.label=s&&$tm.field.nodeLabel!=="title"?this.wiki.renderText("text/plain","text/vnd-tiddlywiki",s):r.fields.title;return a}},{key:"getInheritedNodeStyles",value:function e(t){var i=this.getTiddlersByIds(t);var r={};var a=this.indeces.glNTy;for(var s=a.length;s--;){var l=a[s];var n=[];if(l.id==="tmap:neighbour"){for(var o in t){if(t[o].group==="tmap:neighbour"){n.push(this.getTiddlerById(o))}}}else{n=l.getInheritors(i)}for(var d=n.length;d--;){var u=n[d];var f=r[u]=r[u]||{};f.style=_utils2.default.merge(f.style||{},l.style);if(l["fa-icon"]){f["fa-icon"]=l["fa-icon"]}else if(l["tw-icon"]){f["tw-icon"]=l["tw-icon"]}}}return r}},{key:"attachStylesToNodes",value:function e(t,i){i=new _ViewAbstraction2.default(i);var r=this.getInheritedNodeStyles(t);var a=i.exists()?i.getNodeData():_utils2.default.makeHashMap();var s=i.exists()&&!i.isEnabled("physics_mode");for(var l in t){var n=this.getTiddlerById(l);var o=this.wiki.getTiddler(n);var d=o.fields;var u=t[l];var f=null;var g=null;if(r[n]){if(r[n].style){_utils2.default.merge(u,r[n].style)}f=r[n]["fa-icon"];g=r[n]["tw-icon"]}if(d.color){u.color=d.color}if(d["tmap.style"]){_utils2.default.merge(u,_utils2.default.parseJSON(d["tmap.style"]))}f=d["tmap.fa-icon"]||f;g=d["icon"]||g;if(a[l]){_utils2.default.merge(u,a[l]);if(s){u.fixed={x:u.x!=null,y:u.y!=null}}f=a[l]["fa-icon"]||f;g=a[l]["tw-icon"]||g}var c=u.color!==null&&_typeof(u.color)==="object";var v=c?u.color.background:u.color;u.color={background:v,border:c?u.color.border:undefined};addNodeIcon(u,f,g);u.font=u.font||{};if(u.shape&&!this.visShapesWithTextInside[u.shape]){u.font.color="black"}else if(!u.font.color&&v){u.font.color=(0,_contrastcolour.run)(v,v,"black","white")}if(u.shape==="icon"&&_typeof(u.icon)==="object"){u.icon.color=v}}if(i.exists()){var y=t[i.getConfig("central-topic")];if(y){_utils2.default.merge(y,this.indeces.glNTyById["tmap:central-topic"].style)}}}},{key:"deleteNode",value:function e(t){if(!t)return;var i=(typeof t==="undefined"?"undefined":_typeof(t))==="object"?t.id:t;var r=this.getTiddlerById(i);if(r){_utils2.default.deleteTiddlers([r])}var a=_utils2.default.getMatches(env.selector.allViews);for(var s=a.length;s--;){var l=new _ViewAbstraction2.default(a[s]);l.removeNode(i);if(l.getNodeData(i)){l.saveNodeData(i,null)}}var n=this.getNeighbours([r]);this.deleteEdges(n.edges)}},{key:"deleteNodes",value:function e(t){for(var i=t.length;i--;){this.deleteNode(t[i])}}},{key:"storePositions",value:function e(t,i){i=new _ViewAbstraction2.default(i);if(!i.exists())return;i.saveNodeData(t)}},{key:"insertNode",value:function e(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var i=arguments[1];var r=arguments[2];t.label=this.wiki.generateNewTitle(t.label||_utils2.default.getRandomLabel());var a=new $tw.Tiddler({text:""},r,{title:t.label,"tmap.id":null},this.wiki.getModificationFields(),this.wiki.getCreationFields());this.wiki.addTiddler(a);t=this.makeNode(a,t);i=new _ViewAbstraction2.default(i);if(i.exists()){i.addNode(t)}return t}},{key:"getTiddlersByIds",value:function e(t){if(Array.isArray(t)){t=_utils2.default.getArrayValuesAsHashmapKeys(t)}else if(t instanceof _vis2.default.DataSet){t=_utils2.default.getLookupTable(t,"id")}var i=[];for(var r in t){var a=this.getTiddlerById(r);if(a){i.push(a)}}return i}}]);return e}();var getFAdigits=function e(t){return t.length===4?t:t.substr(3,4)};var addNodeIcon=function e(t,i,r){if(i){t.shape="icon";t.icon={shape:"icon",face:"FontAwesome",color:t.color,code:String.fromCharCode("0x"+getFAdigits(i))};return}if(r){var a=_utils2.default.getTiddler(r);if(!a)return;if(a.fields["_canonical_uri"]){t.image=a.fields["_canonical_uri"];t.shape="image"}else if(a.fields.text){t.image=_utils2.default.getDataUri(a);t.shape="image"}}};var removeObsoleteViewData=function e(t,i){i=new _ViewAbstraction2.default(i);if(!i.exists()||!t)return;var r=i.getNodeData();var a=0;for(var s in r){if(t[s]===undefined&&r[s]!=null){r[s]=undefined;a++}}if(a){$tm.logger("debug","[Cleanup]","Removed obsolete node data:",i.getLabel(),a);i.saveNodeData(r)}};var addStyleToEdge=function e(t,i){t=Object.assign(t,i.style);if(_utils2.default.isTrue(i["show-label"],true)){t.label=i.getLabel()}};exports.default=Adapter;
//# sourceMappingURL=./maps/felixhayashi/tiddlymap/js/services/Adapter.js.map
