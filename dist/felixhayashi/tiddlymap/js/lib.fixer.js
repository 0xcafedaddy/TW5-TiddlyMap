/*\

title: $:/plugins/felixhayashi/tiddlymap/js/fixer
type: application/javascript
module-type: library

@preserve

\*/
"use strict";module.exports={};var utils=require("$:/plugins/felixhayashi/tiddlymap/js/utils");var Adapter=require("$:/plugins/felixhayashi/tiddlymap/js/Adapter");var ViewAbstraction=require("$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction");var EdgeType=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType");var moveEdges=function(e,t){var r=utils.getTiddlersByPrefix(e);for(var i=0;i<r.length;i++){var a=utils.getBasename(r[i]);if(a==="__noname__"){a="tmap:unknown"}a=new EdgeType(a);if(!a.exists())a.save();var s=$tw.wiki.getTiddlerData(r[i]);for(var u=0;u<s.length;u++){s[u].type=(t?t+":":"")+a.id;$tm.adapter.insertEdge(s[u])}$tw.wiki.deleteTiddler(r[i])}};var executeUpgrade=function(e,t,r){if(!utils.isLeftVersionGreater(e,t))return;$tm.logger("debug","Upgrading data structure to "+e);var i=r();utils.setEntry($tm.ref.sysMeta,"dataStructureState",e);return i};var fixer=module.exports;fixer.fixId=function(){var e=$tw.wiki.getTiddlerData($tm.ref.sysMeta,{});var t={before:"0.9.0",after:"0.9.2"};executeUpgrade("0.9.2",e.dataStructureState,function(){if(utils.isLeftVersionGreater("0.9.2",e.originalVersion)){var t="$:/plugins/felixhayashi/tiddlymap/config/sys/user";var r=utils.getEntry(t,"field.nodeId","tmap.id");utils.moveFieldValues(r,"tmap.id",true,false)}})};fixer.fix=function(){var e=$tw.wiki.getTiddlerData($tm.ref.sysMeta,{});$tm.logger("debug","Fixer is started");$tm.logger("debug","Data-structure currently in use: ",e.dataStructureState);executeUpgrade("0.7.0",e.dataStructureState,function(){moveEdges("$:/plugins/felixhayashi/tiddlymap/graph/edges",null);var e=$tm.selector.allViews;var t=utils.getMatches(e);for(var r=0;r<t.length;r++){var i=new ViewAbstraction(t[r]);moveEdges(i.getRoot()+"/graph/edges",i)}});executeUpgrade("0.7.32",e.dataStructureState,function(){var e=new $tm.ViewAbstraction("Live View");if(!e.exists())return;e.setNodeFilter("[field:title{$:/temp/tmap/currentTiddler}]",true);e.setConfig({"refresh-trigger":null,"refresh-triggers":$tw.utils.stringifyList(["$:/temp/tmap/currentTiddler"])})});executeUpgrade("0.9.0",e.dataStructureState,function(){var e=$tm.ref.visUserConf;var t=utils.unflatten($tw.wiki.getTiddlerData(e,{}));if(typeof t.groups==="object"){var r=new $tm.NodeType("tmap:neighbour");r.setStyle(t.groups["neighbours"]);r.save();delete t.groups;$tw.wiki.setTiddlerData(e,t)}});fixer.fixId();executeUpgrade("0.9.16",e.dataStructureState,function(){var e=$tm.indeces.glNTy;for(var t=e.length;t--;){e[t].save(null,true)}});executeUpgrade("0.10.3",e.dataStructureState,function(){var e=$tm.ref.liveTab;if(utils.getTiddler(e).hasTag("$:/tags/SideBar")){$tw.wiki.deleteTiddler(e);utils.setField(e,"tags","$:/tags/SideBar")}});executeUpgrade("0.11.0",e.dataStructureState,function(){var e=utils.getMatches($tm.selector.allViews);for(var t=e.length;t--;){var r=new ViewAbstraction(e[t]);var i=r.getEdgeTypeFilter("raw");var a="edge_type_namespace";r.setConfig(a,r.getConfig(a));if(i){var s=$tm.path.edgeTypes;i=utils.replaceAll(i,"",[s,s+"/","[prefix["+s+"]]","[prefix["+s+"/]]",["[suffix[tw-body:link]]","[[tw-body:link]]"],["[suffix[tw-list:tags]]","[[tw-list:tags]]"],["[suffix[tw-list:list]]","[[tw-body:list]]"],["[suffix[tmap:unknown]]","[[tmap:unknown]]"],["[suffix[unknown]]","[[tmap:unknown]]"]]);var u="-[prefix[_]] "+i}else{var u=$tm.filter.defaultEdgeTypeFilter}r.setEdgeTypeFilter(u)}})};