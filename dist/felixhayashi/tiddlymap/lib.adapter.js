/*\

title: $:/plugins/felixhayashi/tiddlymap/js/Adapter
type: application/javascript
module-type: library

@module TiddlyMap
@preserve

\*/
(function(){"use strict";var e=require("$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction").ViewAbstraction;var t=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType").EdgeType;var r=require("$:/plugins/felixhayashi/tiddlymap/js/NodeType").NodeType;var i=require("$:/plugins/felixhayashi/tiddlymap/js/utils").utils;var s=require("$:/core/modules/macros/contrastcolour.js").run;var a=require("$:/plugins/felixhayashi/vis/vis.js");var o=function(){this.opt=$tw.tmap.opt;this.logger=$tw.tmap.logger;this.indeces=$tw.tmap.indeces;this.visShapesWithTextInside=i.getLookupTable(["ellipse","circle","database","box","text"])};o.prototype.deleteEdge=function(e){return this._processEdge(e,"delete")};o.prototype.deleteEdges=function(e){e=i.convert(e,"array");for(var t=e.length;t--;){this.deleteEdge(e[t])}};o.prototype.insertEdge=function(e){return this._processEdge(e,"insert")};o.prototype._processEdge=function(e,r){this.logger("debug","Edge",r,e);if(typeof e!=="object"||!r||!e.from)return;if(r==="insert"&&!e.to)return;var s=this.indeces.tById[e.from];if(!s||!i.tiddlerExists(s))return;var a=new t(e.type);var o=i.getTiddler(s);var d=a.namespace;if(d==="tw-list"){if(!e.to)return;return this._processListEdge(o,e,a,r)}else if(d==="tw-field"){if(!e.to)return;return this._processFieldEdge(o,e,a,r)}else if(d==="tw-body"){return null}else{return this._processTmapEdge(o,e,a,r)}return e};o.prototype._processTmapEdge=function(e,t,r,s){if(s==="delete"&&!t.id)return;var a=i.parseFieldData(e,"tmap.edges",{});if(s==="insert"){t.id=t.id||i.genUUID();a[t.id]={to:t.to,type:r.id};if(!r.exists()){r.save()}}else{delete a[t.id]}i.writeFieldData(e,"tmap.edges",a);return t};o.prototype._processListEdge=function(e,t,r,s){var a=r.getId(true);var o=i.getTiddler(e);var d=$tw.utils.parseStringArray(e.fields[a]);d=(d||[]).slice();var n=this.indeces.tById[t.to];if(s==="insert"){d.push(n);if(!r.exists()){r.save()}}else{var l=d.indexOf(n);if(l>-1){d.splice(l,1)}}i.setField(o,a,$tw.utils.stringifyList(d));return t};o.prototype._processFieldEdge=function(e,t,r,s){var a=this.indeces.tById[t.to];if(a==null)return;var o=s==="insert"?a:"";i.setField(e,r.getId(true),o);if(!r.exists()){r.save()}return t};o.prototype.getAdjacencyList=function(e,t){$tw.tmap.start("Creating adjacency list");t=t||{};if(!t.edges){var r=i.getMatches(this.opt.selector.allPotentialNodes);t.edges=this.getEdgesForSet(r,t.toWL,t.typeWL)}var s=i.groupByProperty(t.edges,e);$tw.tmap.stop("Creating adjacency list");return s};o.prototype.getNeighbours=function(e,t){$tw.tmap.start("Get neighbours");t=t||{};var r=i.getArrayValuesAsHashmapKeys(e);var s=t.addProperties;var a=i.getDataMap();var o=i.getDataMap();var d=t.toWL;var n=t.typeWL;var l=this.indeces.tById;var p=this.indeces.idByT;var g=parseInt(t.steps)>0?t.steps:1;var f=this.getAdjacencyList("to",t);for(var c=0;c<g&&e.length;c++){var v=[];for(var u=e.length;u--;){if(i.isSystemOrDraft(e[u])){continue}var h=this.getEdges(e[u],d,n);for(var y in h){var w=h[y];a[y]=w;var m=l[w.to];if(!r[m]){r[m]=true;var b=this.makeNode(m,s);if(b){o[b.id]=b;v.push(m)}}}var T=f[p[e[u]]];if(!T)continue;for(var E=T.length;E--;){var w=T[E];a[w.id]=w;var N=l[w.from];if(!r[N]){r[N]=true;var b=this.makeNode(N,s);if(b){o[b.id]=b;v.push(N)}}}}e=v}var I={nodes:o,edges:a};this.logger("debug","Retrieved neighbourhood",I,"steps",c);$tw.tmap.stop("Get neighbours");return I};o.prototype.getGraph=function(t){$tw.tmap.start("Assembling Graph");t=t||{};var r=new e(t.view);var s=i.getMatches(t.filter||r.getNodeFilter("compiled"));var a=i.getArrayValuesAsHashmapKeys(s);var o=this.getEdgeTypeWhiteList(r.getEdgeFilter("compiled"));var d=parseInt(t.neighbourhoodScope||r.getConfig("neighbourhood_scope"));var n={edges:this.getEdgesForSet(s,a,o),nodes:this.selectNodesByReferences(s,{view:r,outputType:"hashmap"})};if(d){var l=this.getNeighbours(s,{steps:d,view:r,typeWL:o,addProperties:{group:"tmap:neighbour"}});i.merge(n,l);if(r.isEnabled("show_inter_neighbour_edges")){var p=this.getTiddlersById(l.nodes);var a=i.getArrayValuesAsHashmapKeys(p);$tw.utils.extend(n.edges,this.getEdgesForSet(p,a))}}this._removeObsoleteViewData(n.nodes,r);this.attachStylesToNodes(n.nodes,r);$tw.tmap.stop("Assembling Graph");this.logger("debug","Assembled graph:",n);return n};o.prototype.getEdges=function(e,t,r){if(!i.tiddlerExists(e)||i.isSystemOrDraft(e)){return}var s=i.getTiddler(e);var a=i.getTiddlerRef(e);var o=this._getTmapEdges(e,t,r);var d=i.getMatches($tw.tmap.opt.selector.allListEdgeStores);var n=i.getDataMap();n["tw-body:link"]=$tw.wiki.getTiddlerLinks(a);for(var l=d.length;l--;){n["tw-list:"+d[l]]=$tw.utils.parseStringArray(s.fields[d[l]])}var d=i.getMatches($tw.tmap.opt.selector.allFieldEdgeStores);for(var l=d.length;l--;){n["tw-field:"+d[l]]=[s.fields[d[l]]]}$tw.utils.extend(o,this._getEdgesFromRefArray(a,n,t,r));return o};o.prototype._getEdgesFromRefArray=function(e,r,s,a){var o=i.getDataMap();for(var d in r){var n=r[d];if(!n||a&&!a[d])continue;d=new t(d);for(var l=n.length;l--;){var p=n[l];if(!p||!$tw.wiki.tiddlerExists(p)||i.isSystemOrDraft(p)||s&&!s[p])continue;var g=d.id+$tw.utils.hashString(e+p);var f=this.makeEdge(this.getId(e),this.getId(p),d,g);if(f){o[f.id]=f}}}return o};o.prototype._getTmapEdges=function(e,t,r){var s=i.parseFieldData(e,"tmap.edges",{});var a=i.getDataMap();for(var o in s){var d=s[o];var n=this.indeces.tById[d.to];if(n&&(!t||t[n])&&(!r||r[d.type])){var l=this.makeEdge(this.getId(e),d.to,d.type,o);if(l){a[o]=l}}}return a};o.prototype.getEdgeTypeWhiteList=function(e){var r=i.getDataMap();var s=i.getMatches(this.opt.selector.allEdgeTypes);var a=e?i.getMatches(e,s):s;for(var o=a.length;o--;){var d=new t(a[o]);r[d.id]=d}return r};o.prototype.getEdgesForSet=function(e,t,r){var s=i.getDataMap();for(var a=e.length;a--;){$tw.utils.extend(s,this.getEdges(e[a],t,r))}return s};o.prototype.selectEdgesByType=function(e){var r=i.getDataMap();r[new t(e).id]=true;var s=i.getMatches(this.opt.selector.allPotentialNodes);var a=this.getEdgesForSet(s,null,r);return a};o.prototype._processEdgesWithType=function(e,r){e=new t(e);this.logger("debug","Processing edges",e,r);var i=this.selectEdgesByType(e);if(r.action==="rename"){var s=new t(r.newName);s.load(e);s.save()}for(var a in i){this._processEdge(i[a],"delete");if(r.action==="rename"){i[a].type=r.newName;this._processEdge(i[a],"insert")}}$tw.wiki.deleteTiddler(e.fullPath)};o.prototype.selectNodesByFilter=function(e,t){var r=i.getMatches(e);return this.selectNodesByReferences(r,t)};o.prototype.selectNodesByReferences=function(e,t){t=t||{};var r=t.addProperties;var s=i.getDataMap();var a=Object.keys(e);for(var o=a.length;o--;){var d=this.makeNode(e[a[o]],r);if(d){s[d.id]=d}}return i.convert(s,t.outputType)};o.prototype.selectNodesByIds=function(e,t){var r=this.getTiddlersById(e);return this.selectNodesByReferences(r,t)};o.prototype.selectNodeById=function(e,t){t=i.merge(t,{outputType:"hashmap"});var r=this.selectNodesByIds([e],t);return r[e]};o.prototype.makeEdge=function(e,r,s,a){if(!e||!r)return;if(e instanceof $tw.Tiddler){e=e.fields["tmap.id"]}else if(typeof e==="object"){e=e.id}s=new t(s);var o=s.getLabel();var d={id:a||i.genUUID(),from:e,to:r,type:s.id};var n=s.description;d.title=n||this.indeces.tById[e]+" "+(o||d.id)+" "+this.indeces.tById[r];if(i.isTrue(s["show-label"],true)){d.label=o}d=$tw.utils.extend(d,s.style);return d};o.prototype.removeNodeType=function(e){$tw.wiki.deleteTiddler(new r(e).getPath())};o.prototype.makeNode=function(e,t){var r=i.getTiddler(e);if(!r||r.isDraft()||$tw.wiki.isSystemTiddler(r.fields.title)){return}var s=i.merge({},t);s.id=this.assignId(r);var a=r.fields[this.opt.field.nodeLabel];s.label=a&&this.opt.field.nodeLabel!=="title"?$tw.wiki.renderText("text/plain","text/vnd-tiddlywiki",a):r.fields.title;return s};o.prototype.getInheritedNodeStyles=function(t,r){r=r?new e(r).getLabel():null;var s=this.getTiddlersById(t);var a={};var o=this.indeces.glNTy;for(var d=o.length;d--;){var n=o[d];var l=n.getInheritors(s);for(var p=l.length;p--;){var g=l[p];var f=a[g]=a[g]||{};f.style=i.merge(f.style||{},n.style);if(n["fa-icon"]){f["fa-icon"]=n["fa-icon"]}else if(n["tw-icon"]){f["tw-icon"]=n["tw-icon"]}}}return a};o.prototype.attachStylesToEdges=function(e,t){};o.prototype._removeObsoleteViewData=function(t,r){r=new e(r);if(!r.exists()||!t)return;var i=r.getNodeData();var s=0;for(var a in i){if(t[a]===undefined){delete i[a];s++}}if(s){this.logger("debug","Removed "+s+" node data records from view "+r.getLabel());r.saveNodeData(i)}};o.prototype.attachStylesToNodes=function(t,a){a=new e(a);var o=this.getInheritedNodeStyles(t,a);var d=new r("tmap:neighbour").style;var n=a.getNodeData();var l=!a.isEnabled("physics_mode");var p=this.opt.field.nodeInfo;var g=this.opt.field.nodeIcon;var f=this.indeces.tById;for(var c in t){var v=f[c];var u=$tw.wiki.getTiddler(v);var h=u.fields;var y=t[c];if(o[v]){if(o[v].style){i.merge(y,o[v].style)}this._addNodeIcon(y,o[v]["fa-icon"],o[v]["tw-icon"])}if(y.group==="tmap:neighbour"){i.merge(y,d);y.group=null}if(h.color){y.color=h.color}if(h["tmap.style"]){i.merge(y,i.parseJSON(h["tmap.style"]))}this._addNodeIcon(y,h["tmap.fa-icon"],h[g]);if(n[c]){i.merge(y,n[c]);if(l){y.fixed={x:y.x!=null,y:y.y!=null}}}var w=y.color!==null&&typeof y.color==="object";var m=w?y.color.background:y.color;y.color={background:m,border:w?y.color.border:undefined};y.font=y.font||{};if(y.shape&&!this.visShapesWithTextInside[y.shape]){y.font.color="black"}else if(!y.font.color&&m){y.font.color=s(m,m,"black","white")}if(y.shape==="icon"&&typeof y.icon==="object"){y.icon.color=m}if(h[p]){y.title=$tw.wiki.renderText("text/html","text/vnd-tiddlywiki",h[p])}else if(y.label!==v){y.title=v}}};o.prototype.deleteNode=function(t){if(!t)return;var r=typeof t==="object"?t.id:t;var s=this.indeces.tById[r];if(s){i.deleteTiddlers([s])}var a=$tw.tmap.opt.selector.allViews;var o=i.getMatches(a);for(var d=0;d<o.length;d++){var n=new e(o[d]);if(n.getNodeData(r)){n.saveNodeData(r,null)}}var l=this.getNeighbours([s]);this.deleteEdges(l.edges)};o.prototype.deleteNodes=function(e){e=i.convert(e,"array");for(var t=e.length;t--;){this.deleteNode(e[t])}};o.prototype.getView=function(t,r){return new e(t,r)};o.prototype.createView=function(t){return new e(t,true)};o.prototype.storePositions=function(t,r){r=new e(r);r.saveNodeData(t)};o.prototype.assignId=function(e,t){var r=i.getTiddler(e,true);if(!r)return;var s=r.fields["tmap.id"];if(!s||t){s=i.genUUID();i.setField(r,"tmap.id",s);this.logger("info","Assigning new id to",r.fields.title)}this.indeces.tById[s]=r.fields.title;this.indeces.idByT[r.fields.title]=s;return s};o.prototype.insertNode=function(t,r){if(!r||typeof r!=="object")r={};if(!t||typeof t!=="object"){t=i.getDataMap()}var s=i.getDataMap();s.title=$tw.wiki.generateNewTitle(t.label?t.label:"New node");t.label=s.title;$tw.wiki.addTiddler(new $tw.Tiddler(s,$tw.wiki.getModificationFields(),$tw.wiki.getCreationFields()));t.id=$tw.tmap.adapter.assignId(s.title);if(r.view){var a=new e(r.view);a.addNodeToView(t)}return t};o.prototype._getFAdigits=function(e){return e.length===4?e:e.substr(3,4)};o.prototype.getTiddlersById=function(e){if(Array.isArray(e)){e=i.getArrayValuesAsHashmapKeys(e)}else if(e instanceof a.DataSet){e=i.getLookupTable(e,"id")}var t=[];var r=this.indeces.tById;for(var s in e){if(r[s])t.push(r[s])}return t};o.prototype.getId=function(e){return this.indeces.idByT[i.getTiddlerRef(e)]};o.prototype._addNodeIcon=function(e,t,r){if(t){e.shape="icon";e.icon={shape:"icon",face:"FontAwesome",color:e.color,code:String.fromCharCode("0x"+this._getFAdigits(t))};return}if(!r)return;var s=i.getTiddler(r);if(s&&s.fields.text){var a=s.fields.type||"image/svg+xml";var o=s.fields.text;e.shape="image";if(a==="image/svg+xml"){o=o.replace(/\r?\n|\r/g," ");if(!i.inArray("xmlns",o)){o=o.replace(/<svg/,'<svg xmlns="http://www.w3.org/2000/svg"')}}var d=$tw.config.contentTypeInfo[a].encoding==="base64"?o:window.btoa(o);e.image="data:"+a+";base64,"+d}};exports.Adapter=o})();