/*\

title: $:/plugins/felixhayashi/tiddlymap/adapter.js
type: application/javascript
module-type: library

@module TiddlyMap
@preserve

\*/
(function(){var e=require("$:/plugins/felixhayashi/tiddlymap/utils.js").utils;var t=require("$:/plugins/felixhayashi/tiddlymap/view_abstraction.js").ViewAbstraction;var i=require("$:/plugins/felixhayashi/tiddlymap/edgetype.js").EdgeType;var r=require("$:/plugins/felixhayashi/vis/vis.js");var s=require("$:/core/modules/macros/contrastcolour.js").run;var o=function(){this.wiki=$tw.wiki;this.opt=$tw.tmap.opt;this.logger=$tw.tmap.logger};o.prototype.deleteEdge=function(e){return this._processEdge(e,"delete")};o.prototype.deleteEdges=function(t){t=e.convert(t,"array");for(var i=0;i<t.length;i++){this.deleteEdge(t[i])}};o.prototype.insertEdge=function(e){return this._processEdge(e,"insert")};o.prototype._processEdge=function(t,r){this.logger("debug","Edge",r,t);if(typeof t!=="object"||!r||!t.from)return;if(r==="insert"&&!t.to)return;var s=$tw.tmap.indeces.tById[t.from];if(!s||!e.tiddlerExists(s))return;var o=new i(t.type);var a=e.getTiddler(s);if(e.startsWith(o.getId(),"tw-list:")){return this._processListEdge(a,t,o,r)}else if(e.startsWith(o.getId(),"tw-field:")){return this._processFieldEdge(a,t,o,r)}else if(e.startsWith(o.getId(),"tw-body:")){return null}else{return this._processTmapEdge(a,t,o,r)}return t};o.prototype._processTmapEdge=function(t,i,r,s){if(s==="delete"&&!i.id)return;var o=e.parseFieldData(t,this.opt.field.edges,{});if(s==="insert"){i.id=i.id||e.genUUID();o[i.id]={to:i.to,type:r.getId()};if(!r.exists()){r.persist()}}else{delete o[i.id]}e.writeFieldData(t,this.opt.field.edges,o)};o.prototype._processListEdge=function(t,i,r,s){var o=r.getId(true);var a=$tw.utils.parseStringArray(t.fields[o])||[];a=a.slice();var d=$tw.tmap.indeces.tById[i.to];if(d==null)return;console.log("hallo",o,a,d,s);if(s==="insert"){a.push(d);if(!r.exists()){r.persist()}}else{var n=a.indexOf(d);if(n>-1){a.splice(n,1)}}e.setField(t,o,$tw.utils.stringifyList(a))};o.prototype._processFieldEdge=function(t,i,r,s){var o=$tw.tmap.indeces.tById[i.to];if(o==null)return;var a=s==="insert"?o:"";e.setField(t,r.getId(true),a);if(!r.exists()){r.persist()}};o.prototype.getAdjacencyList=function(t,i){$tw.tmap.start("Creating adjacency list");i=i||{};if(!i.edges){var r=e.getMatches(this.opt.selector.allPotentialNodes);i.edges=this.getEdgesForSet(r,i.toFilter,i.typeFilter)}var s=e.groupByProperty(i.edges,t);$tw.tmap.stop("Creating adjacency list");return s};o.prototype.getNeighbours=function(t,i){$tw.tmap.start("Get neighbours");i=i||{};t=t.slice();var r=i.addProperties;var s=this.getAdjacencyList("to",i);var o=e.getDataMap();var a=e.getDataMap();var d=parseInt(i.steps)>0?i.steps:1;var n=function(){var d=e.getArrayValuesAsHashmapKeys(t);for(var n=t.length-1;n>=0;n--){if(e.isSystemOrDraft(t[n]))continue;var l=this.getEdges(t[n],i.toFilter,i.typeFilter);for(var p in l){var g=$tw.tmap.indeces.tById[l[p].to];if(d[g])continue;if(!a[l[p].to]){var f=this.makeNode(g,r,i.view);if(f){a[l[p].to]=f;t.push(g)}}}$tw.utils.extend(o,l);var u=s[$tw.tmap.indeces.idByT[t[n]]];if(u){for(var h=0;h<u.length;h++){var c=$tw.tmap.indeces.tById[u[h].from];if(d[c])continue;if(!a[u[h].from]){var f=this.makeNode(c,r,i.view);if(f){a[u[h].from]=f;t.push(c)}}o[u[h].id]=u[h]}}}}.bind(this);for(var l=0;l<d;l++){var p=t.length;n();if(p===t.length)break}var g={nodes:a,edges:o};this.logger("debug","Retrieved neighbourhood",g,"steps",l);$tw.tmap.stop("Get neighbours");return g};o.prototype.getGraph=function(i){$tw.tmap.start("Assembling Graph");i=i||{};var r=new t(i.view);var s=e.getMatches(i.filter||r.getNodeFilter("compiled"));var o=e.getArrayValuesAsHashmapKeys(s);var a=this.getEdgeTypeWhiteList(r.getEdgeFilter("compiled"));var d=parseInt(i.neighbourhoodScope||r.getConfig("neighbourhood_scope"));var n={edges:this.getEdgesForSet(s,o,a),nodes:this.selectNodesByReferences(s,{view:r,outputType:"hashmap",addProperties:{group:"matches"}})};if(d){var l=this.getNeighbours(s,{steps:d,view:r,typeFilter:a,addProperties:{group:"neighbours"}});e.merge(n,l);if(r.isEnabled("show_inter_neighbour_edges")){var p=this.getTiddlersById(l.nodes);var o=e.getArrayValuesAsHashmapKeys(p);$tw.utils.extend(n.edges,this.getEdgesForSet(p,o))}}$tw.tmap.stop("Assembling Graph");this.logger("debug","Assembled graph:",n);return n};o.prototype.getEdges=function(t,i,r){if(!e.tiddlerExists(t)||e.isSystemOrDraft(t)){return}var s=e.getTiddler(t);var o=e.getTiddlerRef(t);var a=this._getTmapEdges(t,i,r);var d=$tw.tmap.utils.getMatches($tw.tmap.opt.selector.allListEdgeStores);var n=e.getDataMap();n["tw-body:link"]=this.wiki.getTiddlerLinks(o);for(var l=0;l<d.length;l++){n["tw-list:"+d[l]]=$tw.utils.parseStringArray(s.fields[d[l]])}var d=$tw.tmap.utils.getMatches($tw.tmap.opt.selector.allFieldEdgeStores);for(var l=0;l<d.length;l++){n["tw-field:"+d[l]]=[s.fields[d[l]]]}$tw.utils.extend(a,this._getEdgesFromRefArray(o,n,i,r));return a};o.prototype._getEdgesFromRefArray=function(t,r,s,o){var a=e.getDataMap();for(var d in r){var n=r[d];if(!n||o&&!o[d])continue;d=new i(d);for(var l=0;l<n.length;l++){var p=n[l];if(!p||!$tw.wiki.tiddlerExists(p)||e.isSystemOrDraft(p)||s&&!s[p])continue;var g=d.getId()+$tw.utils.hashString(t+p);var f=this.makeEdge(this.getId(t),this.getId(p),d,g);if(f){a[f.id]=f}}}return a};o.prototype._getTmapEdges=function(t,i,r){var s=e.parseFieldData(t,this.opt.field.edges,{});var o=e.getDataMap();for(var a in s){var d=s[a];var n=$tw.tmap.indeces.tById[d.to];if(n&&(!i||i[n])&&(!r||r[d.type])){var l=this.makeEdge(this.getId(t),d.to,d.type,a);if(l){o[a]=l}}}return o};o.prototype.getEdgeTypeWhiteList=function(t){var r=e.getDataMap();var s=e.getMatches(this.opt.selector.allEdgeTypes);var o=t?e.getMatches(t,s):s;for(var a=0;a<o.length;a++){var d=new i(o[a]);r[d.getId()]=d}return r};o.prototype.getEdgesForSet=function(t,i,r){var s=e.getDataMap();for(var o=0;o<t.length;o++){$tw.utils.extend(s,this.getEdges(t[o],i,r))}return s};o.prototype.selectEdgesByType=function(t){var r=e.getDataMap();r[new i(t).getId()]=true;var s=e.getMatches(this.opt.selector.allPotentialNodes);var o=this.getEdgesForSet(s,null,r);return o};o.prototype._processEdgesWithType=function(e,t){e=new i(e);this.logger("debug","Processing edges",e,t);var r=this.selectEdgesByType(e);if(t.action==="rename"){var s=new i(t.newName);s.loadDataFromType(e);s.persist()}for(var o in r){this._processEdge(r[o],"delete");if(t.action==="rename"){r[o].type=t.newName;this._processEdge(r[o],"insert")}}$tw.wiki.deleteTiddler(e.getPath())};o.prototype.selectNodesByFilter=function(t,i){var r=e.getMatches(t);return this.selectNodesByReferences(r,i)};o.prototype.selectNodesByReferences=function(t,i){i=i||{};var r=i.addProperties;var s=e.getDataMap();var o=Object.keys(t);for(var a=0;a<o.length;a++){var d=this.makeNode(t[o[a]],r,i.view);if(d){s[d.id]=d}}return e.convert(s,i.outputType)};o.prototype.makeEdge=function(t,r,s,o){if(!t||!r)return;if(t instanceof $tw.Tiddler){t=t.fields[this.opt.field.nodeId]}else if(typeof t==="object"){t=t.id}s=new i(s);var a={id:o||e.genUUID(),from:t,to:r,type:s.getId(),title:s.getData("description")};a.label=e.isTrue(s.getData("show-label"),true)?s.getLabel():undefined;a=$tw.utils.extend(a,s.getData("style"));return a};o.prototype.makeNode=function(i,r,o){var a=e.getTiddler(i,true);if(!a||a.isDraft()||this.wiki.isSystemTiddler(a.fields.title)){return}var d=$tw.utils.extendDeepCopy($tw.tmap.opt.config.vis.groups[r&&r.group||"matches"]);var n=a.fields[this.opt.field.nodeIcon];if(n){var l=e.getTiddler(n);if(l&&l.fields.text){var p=l.fields.type?l.fields.type:"image/svg+xml";var g=l.fields.text;d.shape="image";if(p==="image/svg+xml"){g=g.replace(/\r?\n|\r/g," ");if(!e.inArray("xmlns",g)){g=g.replace(/<svg/,'<svg xmlns="http://www.w3.org/2000/svg"')}}var f=$tw.config.contentTypeInfo[p].encoding==="base64"?g:window.btoa(g);d.image="data:"+p+";base64,"+f}}var u=a.fields[this.opt.field.nodeLabel];d.label=u&&this.opt.field.nodeLabel!=="title"?this.wiki.renderText("text/plain","text/vnd-tiddlywiki",u):a.fields.title;var h=a.fields[this.opt.field.nodeInfo];d.title=h&&this.opt.field.nodeInfo!=="text"?this.wiki.renderText("text/html","text/vnd-tiddlywiki",h):a.fields.title;if(a.fields.color){d.color=a.fields.color;d.font=d.font||{};d.font.color=s(d.color,d.color,"#000000","#FFFFFF")}if(typeof r==="object"){d=$tw.utils.extend(d,r)}d.id=this.assignId(a);var o=new t(o);if(o.exists()){var c=o.getPositions()[d.id];if(c){$tw.utils.extend(d,c);if(!o.isEnabled("physics_mode")){d.fixed={x:true,y:true}}}}return d};o.prototype.selectNodesByIds=function(e,t){var i=this.getTiddlersById(e);return this.selectNodesByReferences(i,t)};o.prototype.selectNodeById=function(t,i){i=e.merge(i,{outputType:"hashmap"});var r=this.selectNodesByIds([t],i);return r[t]};o.prototype.getTiddlersById=function(t){if(Array.isArray(t)){t=e.getArrayValuesAsHashmapKeys(t)}else if(t instanceof r.DataSet){t=e.getLookupTable(t,"id")}var i=[];for(var s in t){var o=$tw.tmap.indeces.tById[s];if(o)i.push(o)}return i};o.prototype.getId=function(t){return $tw.tmap.indeces.idByT[e.getTiddlerRef(t)]};o.prototype.deleteNode=function(t){if(!t)return;var i=typeof t==="object"?t.id:t;var r=$tw.tmap.indeces.tById[i];if(!e.tiddlerExists(r))return;var s=this.opt.field.nodeId;var o=this.wiki.getTiddlerList("$:/StoryList");var a=o.indexOf(r);if(a!==-1){o.splice(a,1);var d=this.wiki.getTiddler("$:/StoryList");e.setField(d,"list",o)}var n=this.getNeighbours([r]);this.deleteEdges(n.edges);this.wiki.deleteTiddler(r)};o.prototype.getView=function(e,i){return new t(e,i)};o.prototype.createView=function(e){if(typeof e!=="string"||e===""){e="My view"}var i=this.wiki.generateNewTitle(this.opt.path.views+"/"+e);return new t(i,true)};o.prototype.storePositions=function(e,i){i=new t(i);i.setPositions(e)};o.prototype.assignId=function(t,i){var r=e.getTiddler(t,true);if(!r)return;var s=this.opt.field.nodeId;var o=r.fields[s];if(!o||i&&s!=="title"){o=e.genUUID();e.setField(r,s,o);this.logger("info","Assigning new id to",r.fields.title)}$tw.tmap.indeces.tById[o]=r.fields.title;$tw.tmap.indeces.idByT[r.fields.title]=o;return o};o.prototype.getCollectionFilter=function(t){var i=this.getGraph({view:t});var r=Object.keys(e.getLookupTable(i.nodes,"id"));return e.joinAndWrap(r,"[field:"+this.opt.field.nodeId+"[","]]")};o.prototype.insertNode=function(i,r){if(!r||typeof r!=="object")r={};if(!i||typeof i!=="object"){i=e.getDataMap()}var s=e.getDataMap();s.title=this.wiki.generateNewTitle(i.label?i.label:"New node");i.label=s.title;if(this.opt.field.nodeId==="title"){i.id=s.title}else{i.id=e.genUUID();s[this.opt.field.nodeId]=i.id}if(r.view){var o=new t(r.view);o.addNodeToView(i)}this.wiki.addTiddler(new $tw.Tiddler(s,this.wiki.getModificationFields(),this.wiki.getCreationFields()));return i};exports.Adapter=o})();