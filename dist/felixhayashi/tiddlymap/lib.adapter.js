/*\

title: $:/plugins/felixhayashi/tiddlymap/js/Adapter
type: application/javascript
module-type: library

@module TiddlyMap
@preserve

\*/
(function(){"use strict";var e=require("$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction").ViewAbstraction;var t=require("$:/plugins/felixhayashi/tiddlymap/js/EdgeType").EdgeType;var i=require("$:/plugins/felixhayashi/tiddlymap/js/NodeType").NodeType;var r=require("$:/plugins/felixhayashi/tiddlymap/js/utils").utils;var s=require("$:/core/modules/macros/contrastcolour.js").run;var o=require("$:/plugins/felixhayashi/vis/vis.js");var a=function(){this.opt=$tw.tmap.opt;this.logger=$tw.tmap.logger;this.indeces=$tw.tmap.indeces;this.visShapesWithTextInside=r.getLookupTable(["ellipse","circle","database","box","text"])};a.prototype.deleteEdge=function(e){return this._processEdge(e,"delete")};a.prototype.deleteEdges=function(e){e=r.convert(e,"array");for(var t=e.length;t--;){this.deleteEdge(e[t])}};a.prototype.insertEdge=function(e){return this._processEdge(e,"insert")};a.prototype._processEdge=function(e,i){this.logger("debug","Edge",i,e);if(typeof e!=="object"||!i||!e.from)return;if(i==="insert"&&!e.to)return;var s=this.indeces.tById[e.from];if(!s||!r.tiddlerExists(s))return;var o=new t(e.type);var a=r.getTiddler(s);var d=o.namespace;if(d==="tw-list"){if(!e.to)return;return this._processListEdge(a,e,o,i)}else if(d==="tw-field"){if(!e.to)return;return this._processFieldEdge(a,e,o,i)}else if(d==="tw-body"){return null}else{return this._processTmapEdge(a,e,o,i)}return e};a.prototype._processTmapEdge=function(e,t,i,s){if(s==="delete"&&!t.id)return;var o=r.parseFieldData(e,"tmap.edges",{});if(s==="insert"){t.id=t.id||r.genUUID();o[t.id]={to:t.to,type:i.id};if(!i.exists()){i.save()}}else{delete o[t.id]}r.writeFieldData(e,"tmap.edges",o);return t};a.prototype._processListEdge=function(e,t,i,s){var o=i.getId(true);var a=r.getTiddler(e);var d=$tw.utils.parseStringArray(e.fields[o]);d=(d||[]).slice();var n=this.indeces.tById[t.to];if(s==="insert"){d.push(n);if(!i.exists()){i.save()}}else{var l=d.indexOf(n);if(l>-1){d.splice(l,1)}}r.setField(a,o,$tw.utils.stringifyList(d));return t};a.prototype._processFieldEdge=function(e,t,i,s){var o=this.indeces.tById[t.to];if(o==null)return;var a=s==="insert"?o:"";r.setField(e,i.getId(true),a);if(!i.exists()){i.save()}return t};a.prototype.getAdjacencyList=function(e,t){$tw.tmap.start("Creating adjacency list");t=t||{};if(!t.edges){var i=r.getMatches(this.opt.selector.allPotentialNodes);t.edges=this.getEdgesForSet(i,t.toWL,t.typeWL)}var s=r.groupByProperty(t.edges,e);$tw.tmap.stop("Creating adjacency list");return s};a.prototype.getNeighbours=function(e,t){$tw.tmap.start("Get neighbours");t=t||{};var i=r.getArrayValuesAsHashmapKeys(e);var s=t.addProperties;var o=r.getDataMap();var a=r.getDataMap();var d=t.toWL;var n=t.typeWL;var l=this.indeces.tById;var p=this.indeces.idByT;var g=parseInt(t.steps)>0?t.steps:1;var f=this.getAdjacencyList("to",t);for(var c=0;c<g&&e.length;c++){var v=[];for(var u=e.length;u--;){if(r.isSystemOrDraft(e[u])){continue}var h=this.getEdges(e[u],d,n);for(var y in h){var w=h[y];var m=l[w.to];if(!i[m]){i[m]=true;var b=this.makeNode(m,s);if(b){a[b.id]=b;v.push(m);o[y]=w}}}var T=f[p[e[u]]];if(!T)continue;for(var E=T.length;E--;){var w=T[E];var N=l[w.from];if(!i[N]){i[N]=true;var b=this.makeNode(N,s);if(b){a[b.id]=b;v.push(N);o[w.id]=w}}}}e=v}var I={nodes:a,edges:o};this.logger("debug","Retrieved neighbourhood",I,"steps",c);$tw.tmap.stop("Get neighbours");return I};a.prototype.getGraph=function(t){$tw.tmap.start("Assembling Graph");t=t||{};var i=new e(t.view);var s=r.getMatches(t.filter||i.getNodeFilter("compiled"));var o=r.getArrayValuesAsHashmapKeys(s);var a=this.getEdgeTypeWhiteList(i.getEdgeFilter("compiled"));var d=parseInt(t.neighbourhoodScope||i.getConfig("neighbourhood_scope"));var n={edges:this.getEdgesForSet(s,o,a),nodes:this.selectNodesByReferences(s,{view:i,outputType:"hashmap"})};if(d){var l=this.getNeighbours(s,{steps:d,view:i,typeWL:a,addProperties:{group:"tmap:neighbour"}});r.merge(n,l);if(i.isEnabled("show_inter_neighbour_edges")){var p=this.getTiddlersById(l.nodes);var o=r.getArrayValuesAsHashmapKeys(p);$tw.utils.extend(n.edges,this.getEdgesForSet(p,o))}}this._removeObsoleteViewData(n.nodes,i);this.attachStylesToNodes(n.nodes,i);$tw.tmap.stop("Assembling Graph");this.logger("debug","Assembled graph:",n);return n};a.prototype.getEdges=function(e,t,i){if(!r.tiddlerExists(e)||r.isSystemOrDraft(e)){return}var s=r.getTiddler(e);var o=r.getTiddlerRef(e);var a=this._getTmapEdges(e,t,i);var d=r.getMatches($tw.tmap.opt.selector.allListEdgeStores);var n=r.getDataMap();n["tw-body:link"]=$tw.wiki.getTiddlerLinks(o);for(var l=d.length;l--;){n["tw-list:"+d[l]]=$tw.utils.parseStringArray(s.fields[d[l]])}var d=r.getMatches($tw.tmap.opt.selector.allFieldEdgeStores);for(var l=d.length;l--;){n["tw-field:"+d[l]]=[s.fields[d[l]]]}$tw.utils.extend(a,this._getEdgesFromRefArray(o,n,t,i));return a};a.prototype._getEdgesFromRefArray=function(e,i,s,o){var a=r.getDataMap();for(var d in i){var n=i[d];if(!n||o&&!o[d])continue;d=new t(d);for(var l=n.length;l--;){var p=n[l];if(!p||!$tw.wiki.tiddlerExists(p)||r.isSystemOrDraft(p)||s&&!s[p])continue;var g=d.id+$tw.utils.hashString(e+p);var f=this.makeEdge(this.getId(e),this.getId(p),d,g);if(f){a[f.id]=f}}}return a};a.prototype._getTmapEdges=function(e,t,i){var s=r.parseFieldData(e,"tmap.edges",{});var o=r.getDataMap();for(var a in s){var d=s[a];var n=this.indeces.tById[d.to];if(n&&(!t||t[n])&&(!i||i[d.type])){var l=this.makeEdge(this.getId(e),d.to,d.type,a);if(l){o[a]=l}}}return o};a.prototype.getEdgeTypeWhiteList=function(e){var i=r.getDataMap();var s=r.getMatches(this.opt.selector.allEdgeTypes);var o=e?r.getMatches(e,s):s;for(var a=o.length;a--;){var d=new t(o[a]);i[d.id]=d}return i};a.prototype.getEdgesForSet=function(e,t,i){var s=r.getDataMap();for(var o=e.length;o--;){$tw.utils.extend(s,this.getEdges(e[o],t,i))}return s};a.prototype.selectEdgesByType=function(e){var i=r.getDataMap();i[new t(e).id]=true;var s=r.getMatches(this.opt.selector.allPotentialNodes);var o=this.getEdgesForSet(s,null,i);return o};a.prototype._processEdgesWithType=function(e,i){e=new t(e);this.logger("debug","Processing edges",e,i);var r=this.selectEdgesByType(e);if(i.action==="rename"){var s=new t(i.newName);s.loadDataFromType(e);s.save()}for(var o in r){this._processEdge(r[o],"delete");if(i.action==="rename"){r[o].type=i.newName;this._processEdge(r[o],"insert")}}$tw.wiki.deleteTiddler(e.fullPath)};a.prototype.selectNodesByFilter=function(e,t){var i=r.getMatches(e);return this.selectNodesByReferences(i,t)};a.prototype.selectNodesByReferences=function(e,t){t=t||{};var i=t.addProperties;var s=r.getDataMap();var o=Object.keys(e);for(var a=o.length;a--;){var d=this.makeNode(e[o[a]],i);if(d){s[d.id]=d}}return r.convert(s,t.outputType)};a.prototype.selectNodesByIds=function(e,t){var i=this.getTiddlersById(e);return this.selectNodesByReferences(i,t)};a.prototype.selectNodeById=function(e,t){t=r.merge(t,{outputType:"hashmap"});var i=this.selectNodesByIds([e],t);return i[e]};a.prototype.makeEdge=function(e,i,s,o){if(!e||!i)return;if(e instanceof $tw.Tiddler){e=e.fields["tmap.id"]}else if(typeof e==="object"){e=e.id}s=new t(s);var a=s.getLabel();var d={id:o||r.genUUID(),from:e,to:i,type:s.id};var n=s.description;d.title=n||this.indeces.tById[e]+" "+(a||d.id)+" "+this.indeces.tById[i];if(r.isTrue(s["show-label"],true)){d.label=a}d=$tw.utils.extend(d,s.style);return d};a.prototype.removeNodeType=function(e){$tw.wiki.deleteTiddler(new i(e).getPath())};a.prototype.makeNode=function(e,t){var i=r.getTiddler(e);if(!i||i.isDraft()||$tw.wiki.isSystemTiddler(i.fields.title)){return}var s=r.merge({},t);s.id=this.assignId(i);var o=i.fields[this.opt.field.nodeLabel];s.label=o&&this.opt.field.nodeLabel!=="title"?$tw.wiki.renderText("text/plain","text/vnd-tiddlywiki",o):i.fields.title;return s};a.prototype.getInheritedNodeStyles=function(t,i){i=i?new e(i).getLabel():null;var s=this.getTiddlersById(t);var o={};var a=this.indeces.loGlNTy;for(var d=a.length;d--;){var n=a[d];if(i&&n.view&&n.view!==i)continue;var l=a[d].getInheritors(s);if(!l.length)continue;for(var p=l.length;p--;){var g=l[p];o[g]=o[g]||{};o[g].style=r.merge(o[g].style||{},n.style);if(n["fa-icon"]){o[g]["fa-icon"]=n["fa-icon"]}else if(n["tw-icon"]){o[g]["tw-icon"]=n["tw-icon"]}}}return o};a.prototype.attachStylesToEdges=function(e,t){};a.prototype._removeObsoleteViewData=function(t,i){i=new e(i);if(!i.exists()||!t)return;var r=i.getNodeData();var s=0;for(var o in r){if(t[o]===undefined){delete r[o];s++}}if(s){this.logger("debug","Removed "+s+" node data records from view "+i.getLabel());i.saveNodeData(r)}};a.prototype.attachStylesToNodes=function(t,o){o=new e(o);var a=this.getInheritedNodeStyles(t,o);var d=new i("tmap:neighbour").style;var n=o.getNodeData();var l=!o.isEnabled("physics_mode");var p=this.opt.field.nodeInfo;var g=this.opt.field.nodeIcon;var f=this.indeces.tById;for(var c in t){var v=f[c];var u=$tw.wiki.getTiddler(v);var h=u.fields;var y=t[c];if(a[v]){if(a[v].style){r.merge(y,a[v].style)}this._addNodeIcon(y,a[v]["fa-icon"],a[v]["tw-icon"])}if(y.group==="tmap:neighbour"){r.merge(y,d);delete y.group}if(h.color){y.color=h.color}if(h["tmap.style"]){r.merge(y,r.parseJSON(h["tmap.style"]))}this._addNodeIcon(y,h["tmap.fa-icon"],h[g]);if(n[c]){r.merge(y,n[c]);if(l){y.fixed={x:true,y:true}}}var w=typeof y.color==="object"?y.color.background:y.color;y.color=w;y.font=y.font||{};if(typeof y.font==="object"&&!y.font.color){var m=y.shape;if(m&&!this.visShapesWithTextInside[m]){y.font.color="black"}else{if(w){y.font.color=s(w,w,"black","white")}}}if(y.shape==="icon"&&typeof y.icon==="object"){y.icon.color=w}if(h[p]){y.title=$tw.wiki.renderText("text/html","text/vnd-tiddlywiki",h[p])}else if(y.label!==v){y.title=v}}};a.prototype.deleteNode=function(t){if(!t)return;var i=typeof t==="object"?t.id:t;var s=this.indeces.tById[i];if(s){r.deleteTiddlers([s])}var o=$tw.tmap.opt.selector.allViews;var a=r.getMatches(o);for(var d=0;d<a.length;d++){var n=new e(a[d]);if(n.getNodeData(i)){n.saveNodeData(i,null)}}var l=this.getNeighbours([s]);this.deleteEdges(l.edges)};a.prototype.deleteNodes=function(e){e=r.convert(e,"array");for(var t=e.length;t--;){this.deleteNode(e[t])}};a.prototype.getView=function(t,i){return new e(t,i)};a.prototype.createView=function(t){return new e(t,true)};a.prototype.storePositions=function(t,i){i=new e(i);i.saveNodeData(t)};a.prototype.assignId=function(e,t){var i=r.getTiddler(e,true);if(!i)return;var s=i.fields["tmap.id"];if(!s||t){s=r.genUUID();r.setField(i,"tmap.id",s);this.logger("info","Assigning new id to",i.fields.title)}this.indeces.tById[s]=i.fields.title;this.indeces.idByT[i.fields.title]=s;return s};a.prototype.insertNode=function(t,i){if(!i||typeof i!=="object")i={};if(!t||typeof t!=="object"){t=r.getDataMap()}var s=r.getDataMap();s.title=$tw.wiki.generateNewTitle(t.label?t.label:"New node");t.label=s.title;if(this.opt.field.nodeId==="title"){t.id=s.title}else{t.id=r.genUUID();s["tmap.id"]=t.id}if(i.view){var o=new e(i.view);o.addNodeToView(t)}$tw.wiki.addTiddler(new $tw.Tiddler(s,$tw.wiki.getModificationFields(),$tw.wiki.getCreationFields()));return t};a.prototype.getTiddlersById=function(e){if(Array.isArray(e)){e=r.getArrayValuesAsHashmapKeys(e)}else if(e instanceof o.DataSet){e=r.getLookupTable(e,"id")}var t=[];var i=this.indeces.tById;for(var s in e){if(i[s])t.push(i[s])}return t};a.prototype.getId=function(e){return this.indeces.idByT[r.getTiddlerRef(e)]};a.prototype._addNodeIcon=function(e,t,i){if(t){e.shape="icon";e.icon={shape:"icon",face:"FontAwesome",color:e.color,code:String.fromCharCode("0x"+t)};return}if(!i)return;var s=r.getTiddler(i);if(s&&s.fields.text){var o=s.fields.type||"image/svg+xml";var a=s.fields.text;e.shape="image";if(o==="image/svg+xml"){a=a.replace(/\r?\n|\r/g," ");if(!r.inArray("xmlns",a)){a=a.replace(/<svg/,'<svg xmlns="http://www.w3.org/2000/svg"')}}var d=$tw.config.contentTypeInfo[o].encoding==="base64"?a:window.btoa(a);e.image="data:"+o+";base64,"+d}};exports.Adapter=a})();