{"version":3,"sources":["felixhayashi/tiddlymap/js/startup.environment.js"],"names":["run","parent","window","$tm","path","pluginRoot","nodeTypes","views","edgeTypes","options","dialogs","tempPopups","localHolders","graphBar","sysUserConf","visUserConf","defaultViewHolder","welcomeFlag","mainEditor","unknownEdgeLabel","liveViewLabel","defaultViewLabel","arrows","in","out","bi","mainEditorId","nodeLabel","nodeIcon","config","sys","misc","viewMarker","edgeClickBehaviour","liveTab","fallbackView","popups","suppressedDialogs","debug","notifications","enabled","delay","width","height","showNeighScopeButton","jsonIndentation","filter","field","s","selector","allSelector","allEdgeTypes","allEdgeTypesById","allNodeTypes","allViews","allViewsByLabel","allPotentialNodes","platforms","after","before","synchronous","startup"],"mappings":";;;;;;;;;;;AA4BA,QAASA,KAAIC,GAEXC,OAAOC,MAFTA,KAAAC,MAMIC,WAAiB,oCAJnBH,UAAA,oDAMEI,UAAiB,oDAJnBC,MAAA,gDACAJ,QAAW,2CACTE,QAAiB,2CACjBG,QAAiB,iDACjBF,SAAiB,eACjBC,WAAiB,qBACjBE,WAAiB,2BACjBC,aAAiB,uBAIjBC,KAAAA,KACAC,kBAAiB,2DAXnBC,SAAA,2DAkBEC,YAAoB,oDAJtBC,YAAA,oDACAZ,YAAU,iDACRa,YAAoB,qDACpBH,QAAoB,8CACpBC,QAAoB,iDACpBC,WAAoB,gDACpBE,kBAAoB,yDAIpBC,KAAAA,MATFC,iBAAA,iBAiBEC,cAAe,YAJjBC,iBAAA,UACAlB,aAAW,cACTmB,QAAAC,GAAA,IAAAC,IAAA,IAAAC,GAAA,KAGAJ,KAAAA,QACAK,KACAJ,OANFK,UAAA,UAaMC,SAAU,OAJZC,SAAS,cACXC,WAAK,UAEDH,SACAC,aAAUzB,IAFL4B,KAAAX,eAILY,qBAJKC,mBADJ,UAOHC,MAAAA,QACEC,cAAAA,OADOC,QAGTC,QAAAA,OACAJ,MAAAA,MACAK,MAAO,QACPC,OAAAA,SAEEC,gBADM,IAENC,iBAFM,QAGNC,gBAHM,QAINC,eAlBCC,qBAAA,OAoBHC,qBApBG,SAuBY1C,KAAA2C,QAvBZxC,UAAA,WAAAH,IAAAC,KAAAE,UAAA,KADPE,UAAA,WAAAL,IAAAC,KAAAI,UAAA,KAmCED,MAAO,IAAMJ,IAAI0B,OAAOC,IAAIiB,MAAMf,WAAa,UAF/C1B,KAAAA,OAAAA,sBAAiCA,gBACLF,qBACA2C,qBAH9B,oBAWA,IAAAC,GAAA7C,IAAA8C,WACA,IAAAC,GAAA,uCAKAF,GAAEG,aAAeD,EAAc,KAAO/C,IAAI2C,OAAOtC,SADjDwC,GAAAI,iBAAAJ,EAAAG,aACiBD,mBAAyBJ,IAAOtC,KAAAA,UAAjD,KAIAwC,GAAAK,aAAAH,EAAA,KAAA/C,IAAA2C,OAAAxC,SACA0C,GAAEK,iBAAeH,EAAAA,aACMG,mBACGlD,IAAAC,KADLE,UACmCA,KAGxD0C,GAAEM,SAAWJ,EAAc,KAAO/C,IAAI2C,OAAOvC,KAC7CyC,GAAEO,gBAAkBP,EAAEM,SAAW,kBAAoBnD,IAAIC,KAAKG,MAAQ,KAGtEyC,GAAEQ,kBAAoB,2CAOXC,GAAAA,MAAAA,QAAAA,KAAAA,kBACAC,IAAAA,WAAAA,QAAAA,WAAAA,UACAC,IAAAA,OAAAA,QAAAA,OAAAA,UACAC,IAAAA,QAAAA,QAAAA,QAAAA,iBACAC,IAAAA,aAAAA,QAAAA,YAAAA,IAAN,IAAMA,SAAAA,QAAAA,QAAU7D","file":"../../../../felixhayashi/tiddlymap/js/startup.environment.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/startup/environment\ntype: application/javascript\nmodule-type: startup\n\n@preserve\n\n\\*/\n\n/*** Imports *******************************************************/\n\n// NEVER\n\n/*** Code **********************************************************/\n\n/**\n * This module is responsible for registering a global namespace\n * under $tw and registering fundamental path variables.\n *\n * Everything that doesn't change when the global config object is\n * updated. This includes prefixes (paths) and tiddler titles.\n *\n * ATTENTION: The paths are deliberately written in full so they\n * are discovered when a search is performed over the TiddlyMap code.\n */\n\nfunction run(parent) {\n\n  window.$tm = {};\n\n  // **ATTENTION: NO TRAILING SLASHES IN PATHS EVER**\n  $tm.path = {\n    pluginRoot:      '$:/plugins/felixhayashi/tiddlymap',\n    edgeTypes:       '$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes',\n    nodeTypes:       '$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes',\n    views:           '$:/plugins/felixhayashi/tiddlymap/graph/views',\n    options:         '$:/plugins/felixhayashi/tiddlymap/config',\n    dialogs:         '$:/plugins/felixhayashi/tiddlymap/dialog',\n    footers:         '$:/plugins/felixhayashi/tiddlymap/dialogFooter',\n    tempRoot:        '$:/temp/tmap',\n    tempStates:      '$:/temp/tmap/state',\n    tempPopups:      '$:/temp/tmap/state/popup',\n    localHolders:    '$:/temp/tmap/holders'\n  };\n\n  // static references to important tiddlers\n  $tm.ref = {\n    defaultViewHolder:  '$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder',\n    graphBar:           '$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar',\n    sysUserConf:        '$:/plugins/felixhayashi/tiddlymap/config/sys/user',\n    visUserConf:        '$:/plugins/felixhayashi/tiddlymap/config/vis/user',\n    welcomeFlag:        '$:/plugins/felixhayashi/tiddlymap/flag/welcome',\n    focusButton:        '$:/plugins/felixhayashi/tiddlymap/misc/focusButton',\n    sysMeta:            '$:/plugins/felixhayashi/tiddlymap/misc/meta',\n    liveTab:            '$:/plugins/felixhayashi/tiddlymap/hook/liveTab',\n    mainEditor:         '$:/plugins/felixhayashi/tiddlymap/hook/editor',\n    sidebarBreakpoint:  '$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint'\n  };\n\n  // some other options\n  $tm.misc = {\n    // if no edge label is specified, this is used as label\n    unknownEdgeLabel: 'tmap:undefined',\n    liveViewLabel: 'Live View',\n    defaultViewLabel: 'Default',\n    mainEditorId: 'main_editor',\n    arrows: { 'in': '⇦', 'out': '➡', 'bi': '⇄' }\n  };\n\n  $tm.config = {\n    sys: {\n      field: {\n        nodeLabel: 'caption',\n        nodeIcon: 'icon',\n        nodeInfo: 'description',\n        viewMarker: 'isview'\n      },\n      liveTab: {\n        fallbackView: $tm.misc.liveViewLabel\n      },\n      suppressedDialogs: {},\n      edgeClickBehaviour: 'manager',\n      debug: 'false',\n      notifications: 'true',\n      popups: {\n        enabled: 'true',\n        delay: '600',\n        width: '240px',\n        height: '140px'\n      },\n      jsonIndentation: '1',\n      editNodeOnCreate: 'false',\n      singleClickMode: 'false',\n      editorMenuBar: {\n        showNeighScopeButton: 'true',\n        showScreenshotButton: 'true'\n      }\n    }\n  };\n\n  // some popular filters\n  $tm.filter = {\n    nodeTypes: '[prefix[' + $tm.path.nodeTypes + ']]',\n    edgeTypes: '[prefix[' + $tm.path.edgeTypes + ']]',\n    views: '[' + $tm.config.sys.field.viewMarker + '[true]]'\n  };\n\n  $tm.filter.defaultEdgeTypeFilter = ' -[prefix[_]]' +\n                                   ' -[[tw-body:link]]' +\n                                   ' -[[tw-list:tags]]' +\n                                   ' -[[tw-list:list]]';\n\n  // some popular selectors\n  // usually used from within tiddlers via the tmap macro\n  const s = $tm.selector = {};\n  const allSelector = '[all[tiddlers+shadows]!has[draft.of]]';\n\n  // all edge-types (by label)\n  s.allEdgeTypes = allSelector + ' +' + $tm.filter.edgeTypes;\n  s.allEdgeTypesById = s.allEdgeTypes\n                          + ' +[removeprefix[' + $tm.path.edgeTypes + '/]]';\n\n  // all node-types (by label)\n  s.allNodeTypes = allSelector + ' +' + $tm.filter.nodeTypes;\n  s.allNodeTypesById = s.allNodeTypes\n                          + ' +[removeprefix[' + $tm.path.nodeTypes + '/]]';\n\n  // all views (by label)\n  s.allViews = allSelector + ' +' + $tm.filter.views;\n  s.allViewsByLabel = s.allViews + '+[removeprefix[' + $tm.path.views + '/]]';\n\n  // all non-draft non-system tiddlers\n  s.allPotentialNodes = '[all[tiddlers]!is[system]!has[draft.of]]';\n}\n\n\n/*** Exports *******************************************************/\n\nexport const name = 'tmap.environment';\nexport const platforms = [ 'browser' ];\nexport const after = [ 'startup' ];\nexport const before = [ 'tmap.caretaker' ];\nexport const synchronous = true;\nexport const startup = run;\n"],"sourceRoot":"../../../../../src/plugins"}