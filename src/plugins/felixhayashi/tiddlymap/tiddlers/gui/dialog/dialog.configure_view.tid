title: $:/plugins/felixhayashi/tiddlymap/dialog/configureView
subtitle: {{$:/core/images/options-button}} View configuration -- <<view>>
classes: tmap-remove-top-space

\rules except wikilink

\define vis-refresh-trigger() $(temp)$/vis-refresh

<div class="tmap-flash-message tmap-info">
   {{$:/core/images/info-button}}
   All configurations __only__ affect this view.
</div>

<fieldset><legend>Statistics</legend>
  <table class="tmap-key-value-table">
    <tr>
      <th align="left">Created on</th>
      <td><<createdOn>></td>
    </tr>
    <tr>
      <th align="left">Nodes contained in graph</th>
      <td><<numberOfNodes>></td>
    </tr>
    <tr>
      <th align="left">Edges contained in graph</th>
      <td><<numberOfEdges>></td>
    </tr>
  </table>
</fieldset>

<fieldset><legend>Layout</legend>
  <table class="tmap-config-table">
    <<tmap-row type:"input-checkbox"
        title:"Floating nodes"
        field:"config.physics_mode" 
        descr:"Set this to true if you want your nodes to freely
               swirl around.">>
  </table>
</fieldset>

<fieldset><legend>Other</legend>
  <table class="tmap-config-table">
    <<tmap-row type:"input-text"
        title:"Edge-type namespace"
        field:"config.edge_type_namespace" 
        descr:"A namespace (like 'foaf' in 'foaf:knows') that will be
               automatically added to all edge-types you create in
               this view."
        note:"All namespaces are automatically stripped when the
              edge label is displayed in the graph">>
    <<tmap-row type:"input-text"
        title:"Background image"
        field:"config.background_image" 
        descr:"The title of an image tiddler to be used as background
               in the view."
        note:"You can also use an image url directly, however, the
              image needs be stored under the same domain as your wiki.
              Otherwise, it won't be displayed!">>
  </table>
</fieldset>

<fieldset><legend>Neighbourhood</legend>
  <table class="tmap-config-table">
    <<tmap-row type:"input-select"
        title:"Neighbourhood scope"
        field:"config.neighbourhood_scope" 
        selectFilter:"[[|Do not display a neighbourhood]]
                      [[1|1 steps away]]
                      [[2|2 steps away]]
                      [[3|3 steps away]]
                      [[4|4 steps away]]
                      [[5|5 steps away]]
                      [[*|No limit]]"
        descr:"Display the neighbourhood that can be reached
               within the given number of steps starting from the
               matches returned by the node filter.">>
<!--
    <<tmap-row type:"input-checkbox"
        title:"Show inter-neighbour edges"
        field:"config.show_inter_neighbour_edges"
        descr:"When neighbours are displayed in a map along with
               matches, also display their relations to other
               neighbours">>
-->
  </table>
</fieldset>

<fieldset><legend>Vis configurations</legend>
  <div class="tmap-flash-message tmap-info">
     {{$:/core/images/info-button}}
     The local vis configurations will affect all
     elements (nodes and edges) of this view, unless they are
     overridden on a lower level. All options below are documented at
     [[vis.js.org|http://visjs.org/docs/network]].
  </div>
  <table class="tmap-config-table">
    <tr>
      <td>Reset config:</td>
      <td>
        <div class="tmap-button-wrapper">
          <$button>Reset vis configuration
            <$action-setfield config.vis="" />
            <$action-setfield $tiddler=<<vis-refresh-trigger>> text="" />
          </$button>
       </div>
     </td>
     <td>
       Press the reset button to clear this view's vis configurations.
     </td>
    </tr>
  </table>
  <$tmap-config
      mode="manage-config"
      inherited="vis-inherited"
      extension="config.vis"
      refresh-trigger=<<vis-refresh-trigger>> />
</fieldset>